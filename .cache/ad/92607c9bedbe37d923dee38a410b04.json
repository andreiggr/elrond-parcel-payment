{"id":"node_modules/@elrondnetwork/erdjs/out/smartcontracts/wrapper/contractLogger.js","dependencies":[{"name":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/smartcontracts/wrapper/contractLogger.js.map","includedInParent":true,"mtime":1647170304940},{"name":"/Users/mac/code/work/bitmarket/elrond-parcel/package.json","includedInParent":true,"mtime":1647174146392},{"name":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/package.json","includedInParent":true,"mtime":1647170304850}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ContractLogger = void 0;\n/**\n * Provides a simple interface in order to easily call or query the smart contract's methods.\n */\nclass ContractLogger {\n    synchronizedNetworkConfig(networkConfig) {\n        console.log(`Synchronized network config - chainID: ${networkConfig.ChainID.valueOf()}`);\n    }\n    transactionCreated(transaction) {\n        console.log(`Tx ${transaction.getHash()} created. Sending...`);\n    }\n    deployComplete(transaction, smartContractResults, smartContractAddress) {\n        logReturnMessages(transaction, smartContractResults);\n        console.log(`done. (address: ${smartContractAddress.bech32()} )`);\n    }\n    transactionSent(_transaction) {\n        console.log(`awaiting results...`);\n    }\n    transactionComplete(_result, _resultData, transaction, smartContractResults) {\n        logReturnMessages(transaction, smartContractResults);\n        console.log(`done.`);\n    }\n    queryCreated(_query) {\n        console.log(`Query created. Sending...`);\n    }\n    queryComplete(_result, _response) {\n        console.log(`done.`);\n    }\n}\nexports.ContractLogger = ContractLogger;\nfunction logReturnMessages(transaction, smartContractResults) {\n    let immediate = smartContractResults.getImmediate();\n    logSmartContractResultIfMessage(\"(immediate)\", transaction, immediate);\n    let resultingCalls = smartContractResults.getResultingCalls();\n    for (let i in resultingCalls) {\n        logSmartContractResultIfMessage(\"(resulting call)\", transaction, resultingCalls[i]);\n    }\n}\nfunction logSmartContractResultIfMessage(info, _transaction, smartContractResult) {\n    if (smartContractResult.returnMessage) {\n        console.log(`Return message ${info} message: ${smartContractResult.returnMessage}`);\n    }\n}\n"},"sourceMaps":{"js":{"version":3,"file":"contractLogger.js","sourceRoot":"","sources":["../../../src/smartcontracts/wrapper/contractLogger.ts"],"names":[],"mappings":";;;AAEA;;GAEG;AACH,MAAa,cAAc;IAEvB,yBAAyB,CAAC,aAA4B;QAClD,OAAO,CAAC,GAAG,CAAC,0CAA0C,aAAa,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;IAC7F,CAAC;IAED,kBAAkB,CAAC,WAAwB;QACvC,OAAO,CAAC,GAAG,CAAC,MAAM,WAAW,CAAC,OAAO,EAAE,sBAAsB,CAAC,CAAC;IACnE,CAAC;IAED,cAAc,CAAC,WAAwB,EAAE,oBAA0C,EAAE,oBAA6B;QAC9G,iBAAiB,CAAC,WAAW,EAAE,oBAAoB,CAAC,CAAC;QACrD,OAAO,CAAC,GAAG,CAAC,mBAAmB,oBAAoB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IACtE,CAAC;IAED,eAAe,CAAC,YAAyB;QACrC,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;IACvC,CAAC;IAED,mBAAmB,CAAC,OAAY,EAAE,WAAmB,EAAE,WAAwB,EAAE,oBAA0C;QACvH,iBAAiB,CAAC,WAAW,EAAE,oBAAoB,CAAC,CAAC;QACrD,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACzB,CAAC;IAED,YAAY,CAAC,MAAa;QACtB,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;IAC7C,CAAC;IAED,aAAa,CAAC,OAAY,EAAE,SAAwB;QAChD,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACzB,CAAC;CACJ;AA/BD,wCA+BC;AAED,SAAS,iBAAiB,CAAC,WAAwB,EAAE,oBAA0C;IAC3F,IAAI,SAAS,GAAG,oBAAoB,CAAC,YAAY,EAAE,CAAC;IACpD,+BAA+B,CAAC,aAAa,EAAE,WAAW,EAAE,SAAS,CAAC,CAAC;IAEvE,IAAI,cAAc,GAAG,oBAAoB,CAAC,iBAAiB,EAAE,CAAC;IAC9D,KAAK,IAAI,CAAC,IAAI,cAAc,EAAE;QAC1B,+BAA+B,CAAC,kBAAkB,EAAE,WAAW,EAAE,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;KACvF;AACL,CAAC;AAED,SAAS,+BAA+B,CAAC,IAAY,EAAE,YAAyB,EAAE,mBAAgC;IAC9G,IAAI,mBAAmB,CAAC,aAAa,EAAE;QACnC,OAAO,CAAC,GAAG,CAAC,kBAAkB,IAAI,aAAa,mBAAmB,CAAC,aAAa,EAAE,CAAC,CAAC;KACvF;AACL,CAAC","sourcesContent":[null]}},"error":null,"hash":"ef9e4d12af96593de5a19caaa0d53b18","cacheData":{"env":{}}}