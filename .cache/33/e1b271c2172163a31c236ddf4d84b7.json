{"id":"node_modules/core-js-pure/internals/map-emplace.js","dependencies":[{"name":"/Users/mac/code/work/bitmarket/elrond-parcel/package.json","includedInParent":true,"mtime":1647174146392},{"name":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/core-js-pure/package.json","includedInParent":true,"mtime":1647174145968},{"name":"../internals/function-call","loc":{"line":2,"column":19,"index":33},"parent":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/core-js-pure/internals/map-emplace.js","resolved":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/core-js-pure/internals/function-call.js"},{"name":"../internals/a-callable","loc":{"line":3,"column":24,"index":88},"parent":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/core-js-pure/internals/map-emplace.js","resolved":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/core-js-pure/internals/a-callable.js"},{"name":"../internals/an-object","loc":{"line":4,"column":23,"index":139},"parent":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/core-js-pure/internals/map-emplace.js","resolved":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/core-js-pure/internals/an-object.js"}],"generated":{"js":"'use strict';\nvar call = require('../internals/function-call');\nvar aCallable = require('../internals/a-callable');\nvar anObject = require('../internals/an-object');\n\n// `Map.prototype.emplace` method\n// https://github.com/thumbsupep/proposal-upsert\nmodule.exports = function emplace(key, handler) {\n  var map = anObject(this);\n  var get = aCallable(map.get);\n  var has = aCallable(map.has);\n  var set = aCallable(map.set);\n  var value = (call(has, map, key) && 'update' in handler)\n    ? handler.update(call(get, map, key), key, map)\n    : handler.insert(key, map);\n  call(set, map, key, value);\n  return value;\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/core-js-pure/internals/map-emplace.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/core-js-pure/internals/map-emplace.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/core-js-pure/internals/map-emplace.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/core-js-pure/internals/map-emplace.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/core-js-pure/internals/map-emplace.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/core-js-pure/internals/map-emplace.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/core-js-pure/internals/map-emplace.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/core-js-pure/internals/map-emplace.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/core-js-pure/internals/map-emplace.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/core-js-pure/internals/map-emplace.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/core-js-pure/internals/map-emplace.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/core-js-pure/internals/map-emplace.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/core-js-pure/internals/map-emplace.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/core-js-pure/internals/map-emplace.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/core-js-pure/internals/map-emplace.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/core-js-pure/internals/map-emplace.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/core-js-pure/internals/map-emplace.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/core-js-pure/internals/map-emplace.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/core-js-pure/internals/map-emplace.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}}],"sources":{"node_modules/core-js-pure/internals/map-emplace.js":"'use strict';\nvar call = require('../internals/function-call');\nvar aCallable = require('../internals/a-callable');\nvar anObject = require('../internals/an-object');\n\n// `Map.prototype.emplace` method\n// https://github.com/thumbsupep/proposal-upsert\nmodule.exports = function emplace(key, handler) {\n  var map = anObject(this);\n  var get = aCallable(map.get);\n  var has = aCallable(map.has);\n  var set = aCallable(map.set);\n  var value = (call(has, map, key) && 'update' in handler)\n    ? handler.update(call(get, map, key), key, map)\n    : handler.insert(key, map);\n  call(set, map, key, value);\n  return value;\n};\n"},"lineCount":19}},"error":null,"hash":"31abd65afb9b07a270fc5cb26b24d4ff","cacheData":{"env":{}}}