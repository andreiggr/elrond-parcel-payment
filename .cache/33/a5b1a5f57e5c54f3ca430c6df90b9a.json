{"id":"node_modules/@elrondnetwork/erdjs/out/smartcontracts/strictChecker.js","dependencies":[{"name":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/smartcontracts/strictChecker.js.map","includedInParent":true,"mtime":1647170305216},{"name":"/Users/mac/code/work/bitmarket/elrond-parcel/package.json","includedInParent":true,"mtime":1647174146392},{"name":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/package.json","includedInParent":true,"mtime":1647170304850},{"name":"../errors","loc":{"line":23,"column":36,"index":1004},"parent":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/smartcontracts/strictChecker.js","resolved":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/errors.js"}],"generated":{"js":"\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StrictChecker = void 0;\nconst errors = __importStar(require(\"../errors\"));\n/**\n * An interaction checker that aims to be as strict as possible.\n * It is designed to catch programmer errors such as:\n *  - incorrect types of contract call arguments\n *  - errors related to calling \"non-payable\" functions with some value provided\n *  - gas estimation errors (not yet implemented)\n */\nclass StrictChecker {\n    checkInteraction(interaction) {\n        let definition = interaction.getEndpoint();\n        this.checkPayable(interaction, definition);\n        this.checkArguments(interaction, definition);\n    }\n    checkPayable(interaction, definition) {\n        let hasValue = interaction.getValue().isSet();\n        let isPayableInEGLD = definition.modifiers.isPayableInEGLD();\n        if (hasValue && !isPayableInEGLD) {\n            throw new errors.ErrContractInteraction(\"cannot send EGLD value to non-payable\");\n        }\n    }\n    checkArguments(interaction, definition) {\n        let formalArguments = definition.input;\n        let actualArguments = interaction.getArguments();\n        let numFormalArguments = formalArguments.length;\n        let numActualArguments = actualArguments.length;\n        if (numFormalArguments != numActualArguments) {\n            throw new errors.ErrContractInteraction(`bad arguments, expected: ${numFormalArguments}, got: ${numActualArguments}`);\n        }\n        // TODO: discuss again, possibly redesign the handling of covariance / contravariance.\n        for (let i = 0; i < numFormalArguments; i++) {\n            let expectedType = formalArguments[i].type;\n            let argument = actualArguments[i];\n            let actualType = argument.getType();\n            // isAssignableFrom() is responsible to handle covariance and contravariance (depending on the class that overrides it).\n            let ok = expectedType.isAssignableFrom(actualType);\n            if (!ok) {\n                throw new errors.ErrContractInteraction(`type mismatch at index ${i}, expected: ${expectedType}, got: ${actualType}`);\n            }\n        }\n    }\n}\nexports.StrictChecker = StrictChecker;\n"},"sourceMaps":{"js":{"version":3,"file":"strictChecker.js","sourceRoot":"","sources":["../../src/smartcontracts/strictChecker.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,kDAAoC;AAKpC;;;;;;GAMG;AACH,MAAa,aAAa;IACtB,gBAAgB,CAAC,WAAwB;QACrC,IAAI,UAAU,GAAG,WAAW,CAAC,WAAW,EAAE,CAAC;QAE3C,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;QAC3C,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;IACjD,CAAC;IAEO,YAAY,CAAC,WAAwB,EAAE,UAA8B;QACzE,IAAI,QAAQ,GAAG,WAAW,CAAC,QAAQ,EAAE,CAAC,KAAK,EAAE,CAAC;QAC9C,IAAI,eAAe,GAAG,UAAU,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC;QAE7D,IAAI,QAAQ,IAAI,CAAC,eAAe,EAAE;YAC9B,MAAM,IAAI,MAAM,CAAC,sBAAsB,CAAC,uCAAuC,CAAC,CAAC;SACpF;IACL,CAAC;IAEO,cAAc,CAAC,WAAwB,EAAE,UAA8B;QAC3E,IAAI,eAAe,GAAG,UAAU,CAAC,KAAK,CAAC;QACvC,IAAI,eAAe,GAAG,WAAW,CAAC,YAAY,EAAE,CAAC;QACjD,IAAI,kBAAkB,GAAG,eAAe,CAAC,MAAM,CAAC;QAChD,IAAI,kBAAkB,GAAG,eAAe,CAAC,MAAM,CAAC;QAEhD,IAAI,kBAAkB,IAAI,kBAAkB,EAAE;YAC1C,MAAM,IAAI,MAAM,CAAC,sBAAsB,CAAC,4BAA4B,kBAAkB,UAAU,kBAAkB,EAAE,CAAC,CAAC;SACzH;QAED,sFAAsF;QAEtF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,kBAAkB,EAAE,CAAC,EAAE,EAAE;YACzC,IAAI,YAAY,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YAC3C,IAAI,QAAQ,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;YAClC,IAAI,UAAU,GAAG,QAAQ,CAAC,OAAO,EAAE,CAAC;YACpC,wHAAwH;YACxH,IAAI,EAAE,GAAG,YAAY,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;YAEnD,IAAI,CAAC,EAAE,EAAE;gBACL,MAAM,IAAI,MAAM,CAAC,sBAAsB,CAAC,0BAA0B,CAAC,eAAe,YAAY,UAAU,UAAU,EAAE,CAAC,CAAC;aACzH;SACJ;IACL,CAAC;CACJ;AAzCD,sCAyCC","sourcesContent":[null]}},"error":null,"hash":"9f7d3f8216e4f58488c722ef039a1a2e","cacheData":{"env":{}}}