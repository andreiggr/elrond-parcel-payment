{"id":"node_modules/@elrondnetwork/erdjs/out/smartcontracts/typesystem/generic.js","dependencies":[{"name":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/smartcontracts/typesystem/generic.js.map","includedInParent":true,"mtime":1647170304997},{"name":"/Users/mac/code/work/bitmarket/elrond-parcel/package.json","includedInParent":true,"mtime":1647174146392},{"name":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/package.json","includedInParent":true,"mtime":1647170304850},{"name":"../../utils","loc":{"line":4,"column":24,"index":186},"parent":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/smartcontracts/typesystem/generic.js","resolved":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/utils.js"},{"name":"./types","loc":{"line":5,"column":24,"index":226},"parent":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/smartcontracts/typesystem/generic.js","resolved":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/smartcontracts/typesystem/types.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.List = exports.OptionValue = exports.ListType = exports.OptionType = void 0;\nconst utils_1 = require(\"../../utils\");\nconst types_1 = require(\"./types\");\nclass OptionType extends types_1.Type {\n    constructor(typeParameter) {\n        super(\"Option\", [typeParameter]);\n    }\n    isAssignableFrom(type) {\n        if (!(type instanceof OptionType)) {\n            return false;\n        }\n        let invariantTypeParameters = this.getFirstTypeParameter().equals(type.getFirstTypeParameter());\n        let fakeCovarianceToNull = type.getFirstTypeParameter() instanceof types_1.NullType;\n        return invariantTypeParameters || fakeCovarianceToNull;\n    }\n}\nexports.OptionType = OptionType;\nclass ListType extends types_1.Type {\n    constructor(typeParameter) {\n        super(\"List\", [typeParameter]);\n    }\n}\nexports.ListType = ListType;\nclass OptionValue extends types_1.TypedValue {\n    constructor(type, value = null) {\n        super(type);\n        // TODO: assert value is of type type.getFirstTypeParameter()\n        this.value = value;\n    }\n    /**\n     * Creates an OptionValue, as a missing option argument.\n     */\n    static newMissing() {\n        let type = new OptionType(new types_1.NullType());\n        return new OptionValue(type);\n    }\n    static newMissingType(type) {\n        return new OptionValue(new OptionType(type));\n    }\n    /**\n     * Creates an OptionValue, as a provided option argument.\n     */\n    static newProvided(typedValue) {\n        let type = new OptionType(typedValue.getType());\n        return new OptionValue(type, typedValue);\n    }\n    isSet() {\n        return this.value ? true : false;\n    }\n    getTypedValue() {\n        utils_1.guardValueIsSet(\"value\", this.value);\n        return this.value;\n    }\n    valueOf() {\n        return this.value ? this.value.valueOf() : null;\n    }\n    equals(other) {\n        var _a;\n        return ((_a = this.value) === null || _a === void 0 ? void 0 : _a.equals(other.value)) || false;\n    }\n}\nexports.OptionValue = OptionValue;\n// TODO: Rename to ListValue, for consistency (though the term is slighly unfortunate).\n// Question for review: or not?\nclass List extends types_1.TypedValue {\n    /**\n     *\n     * @param type the type of this TypedValue (an instance of ListType), not the type parameter of the ListType\n     * @param items the items, having the type type.getFirstTypeParameter()\n     */\n    constructor(type, items) {\n        super(type);\n        // TODO: assert items are of type type.getFirstTypeParameter()\n        this.items = items;\n    }\n    static fromItems(items) {\n        if (items.length == 0) {\n            return new List(new types_1.TypePlaceholder(), []);\n        }\n        let typeParameter = items[0].getType();\n        return new List(typeParameter, items);\n    }\n    getLength() {\n        return this.items.length;\n    }\n    getItems() {\n        return this.items;\n    }\n    valueOf() {\n        return this.items.map((item) => item.valueOf());\n    }\n    equals(other) {\n        if (this.getLength() != other.getLength()) {\n            return false;\n        }\n        for (let i = 0; i < this.getLength(); i++) {\n            let selfItem = this.items[i];\n            let otherItem = other.items[i];\n            if (!selfItem.equals(otherItem)) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nexports.List = List;\n"},"sourceMaps":{"js":{"version":3,"file":"generic.js","sourceRoot":"","sources":["../../../src/smartcontracts/typesystem/generic.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"error":null,"hash":"0835b218210bf0a20262f40dbdf12e8a","cacheData":{"env":{}}}