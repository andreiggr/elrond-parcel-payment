{"id":"node_modules/@elrondnetwork/erdjs/out/testutils/mockProvider.js","dependencies":[{"name":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/testutils/mockProvider.js.map","includedInParent":true,"mtime":1647170305049},{"name":"/Users/mac/code/work/bitmarket/elrond-parcel/package.json","includedInParent":true,"mtime":1647174146392},{"name":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/package.json","includedInParent":true,"mtime":1647170304850},{"name":"../transaction","loc":{"line":32,"column":30,"index":1746},"parent":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/testutils/mockProvider.js","resolved":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/transaction.js"},{"name":"../transactionOnNetwork","loc":{"line":33,"column":39,"index":1804},"parent":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/testutils/mockProvider.js","resolved":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/transactionOnNetwork.js"},{"name":"../networkConfig","loc":{"line":34,"column":32,"index":1864},"parent":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/testutils/mockProvider.js","resolved":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/networkConfig.js"},{"name":"../address","loc":{"line":35,"column":26,"index":1911},"parent":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/testutils/mockProvider.js","resolved":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/address.js"},{"name":"../nonce","loc":{"line":36,"column":24,"index":1950},"parent":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/testutils/mockProvider.js","resolved":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/nonce.js"},{"name":"../asyncTimer","loc":{"line":37,"column":29,"index":1992},"parent":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/testutils/mockProvider.js","resolved":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/asyncTimer.js"},{"name":"../account","loc":{"line":38,"column":26,"index":2036},"parent":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/testutils/mockProvider.js","resolved":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/account.js"},{"name":"../balance","loc":{"line":39,"column":26,"index":2077},"parent":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/testutils/mockProvider.js","resolved":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/balance.js"},{"name":"../errors","loc":{"line":40,"column":36,"index":2128},"parent":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/testutils/mockProvider.js","resolved":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/errors.js"},{"name":"../smartcontracts/queryResponse","loc":{"line":41,"column":32,"index":2175},"parent":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/testutils/mockProvider.js","resolved":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/smartcontracts/queryResponse.js"},{"name":"../hash","loc":{"line":42,"column":23,"index":2234},"parent":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/testutils/mockProvider.js","resolved":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/hash.js"},{"name":"../networkStatus","loc":{"line":43,"column":32,"index":2278},"parent":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/testutils/mockProvider.js","resolved":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/networkStatus.js"},{"name":"../events","loc":{"line":44,"column":25,"index":2324},"parent":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/testutils/mockProvider.js","resolved":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/events.js"}],"generated":{"js":"\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AddImmediateResult = exports.MarkNotarized = exports.Wait = exports.MockProvider = void 0;\nconst transaction_1 = require(\"../transaction\");\nconst transactionOnNetwork_1 = require(\"../transactionOnNetwork\");\nconst networkConfig_1 = require(\"../networkConfig\");\nconst address_1 = require(\"../address\");\nconst nonce_1 = require(\"../nonce\");\nconst asyncTimer_1 = require(\"../asyncTimer\");\nconst account_1 = require(\"../account\");\nconst balance_1 = require(\"../balance\");\nconst errors = __importStar(require(\"../errors\"));\nconst queryResponse_1 = require(\"../smartcontracts/queryResponse\");\nconst hash_1 = require(\"../hash\");\nconst networkStatus_1 = require(\"../networkStatus\");\nconst events_1 = require(\"../events\");\n/**\n * A mock {@link IProvider}, used for tests only.\n */\nclass MockProvider {\n    constructor() {\n        this.queryResponders = [];\n        this.transactions = new Map();\n        this.onTransactionSent = new events_1.TypedEvent();\n        this.accounts = new Map();\n        this.accounts.set(MockProvider.AddressOfAlice.bech32(), new account_1.AccountOnNetwork({ nonce: new nonce_1.Nonce(0), balance: balance_1.Balance.egld(1000) }));\n        this.accounts.set(MockProvider.AddressOfBob.bech32(), new account_1.AccountOnNetwork({ nonce: new nonce_1.Nonce(5), balance: balance_1.Balance.egld(500) }));\n        this.accounts.set(MockProvider.AddressOfCarol.bech32(), new account_1.AccountOnNetwork({ nonce: new nonce_1.Nonce(42), balance: balance_1.Balance.egld(300) }));\n    }\n    getAccountEsdtBalance(_address, _tokenBalanceBuilder) {\n        throw new Error(\"Method not implemented.\");\n    }\n    doPostGeneric(_resourceUrl, _payload, _callback) {\n        throw new Error(\"Method not implemented.\");\n    }\n    doGetGeneric(_resourceUrl, _callback) {\n        throw new Error(\"Method not implemented.\");\n    }\n    mockUpdateAccount(address, mutate) {\n        let account = this.accounts.get(address.bech32());\n        if (account) {\n            mutate(account);\n        }\n    }\n    mockUpdateTransaction(hash, mutate) {\n        let transaction = this.transactions.get(hash.toString());\n        if (transaction) {\n            mutate(transaction);\n        }\n    }\n    mockPutTransaction(hash, item) {\n        this.transactions.set(hash.toString(), item);\n    }\n    mockQueryResponseOnFunction(functionName, response) {\n        let predicate = (query) => query.func.name == functionName;\n        this.queryResponders.push(new QueryResponder(predicate, response));\n    }\n    mockQueryResponse(predicate, response) {\n        this.queryResponders.push(new QueryResponder(predicate, response));\n    }\n    mockTransactionTimeline(transaction, timelinePoints) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield transaction.awaitHashed();\n            return this.mockTransactionTimelineByHash(transaction.getHash(), timelinePoints);\n        });\n    }\n    mockNextTransactionTimeline(timelinePoints) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let transaction = yield this.nextTransactionSent();\n            return this.mockTransactionTimelineByHash(transaction.getHash(), timelinePoints);\n        });\n    }\n    nextTransactionSent() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, _reject) => {\n                this.onTransactionSent.on((eventArgs) => resolve(eventArgs.transaction));\n            });\n        });\n    }\n    mockTransactionTimelineByHash(hash, timelinePoints) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let timeline = new asyncTimer_1.AsyncTimer(`mock timeline of ${hash}`);\n            yield timeline.start(0);\n            for (const point of timelinePoints) {\n                if (point instanceof transaction_1.TransactionStatus) {\n                    this.mockUpdateTransaction(hash, (transaction) => {\n                        transaction.status = point;\n                    });\n                }\n                else if (point instanceof MarkNotarized) {\n                    this.mockUpdateTransaction(hash, (transaction) => {\n                        transaction.hyperblockNonce = new nonce_1.Nonce(42);\n                        transaction.hyperblockHash = new hash_1.Hash(\"a\".repeat(32));\n                    });\n                }\n                else if (point instanceof AddImmediateResult) {\n                    this.mockUpdateTransaction(hash, (transaction) => {\n                        transaction.getSmartContractResults().getImmediate().data = point.data;\n                    });\n                }\n                else if (point instanceof Wait) {\n                    yield timeline.start(point.milliseconds);\n                }\n            }\n        });\n    }\n    getAccount(address) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let account = this.accounts.get(address.bech32());\n            if (account) {\n                return account;\n            }\n            return new account_1.AccountOnNetwork();\n        });\n    }\n    getAddressEsdt(_address, _tokenIdentifier) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return {};\n        });\n    }\n    getAddressEsdtList(_address) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return {};\n        });\n    }\n    getAddressNft(_address, _tokenIdentifier, _nonce) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return {};\n        });\n    }\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.mockPutTransaction(transaction.getHash(), new transactionOnNetwork_1.TransactionOnNetwork({\n                nonce: transaction.getNonce(),\n                sender: transaction.getSender(),\n                receiver: transaction.getReceiver(),\n                data: transaction.getData(),\n                status: new transaction_1.TransactionStatus(\"pending\"),\n            }));\n            this.onTransactionSent.emit({ transaction: transaction });\n            return transaction.getHash();\n        });\n    }\n    simulateTransaction(_transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return {};\n        });\n    }\n    getTransaction(txHash, _hintSender, _withResults) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let transaction = this.transactions.get(txHash.toString());\n            if (transaction) {\n                return transaction;\n            }\n            throw new errors.ErrMock(\"Transaction not found\");\n        });\n    }\n    getTransactionStatus(txHash) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let transaction = this.transactions.get(txHash.toString());\n            if (transaction) {\n                return transaction.status;\n            }\n            throw new errors.ErrMock(\"Transaction not found\");\n        });\n    }\n    getNetworkConfig() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new networkConfig_1.NetworkConfig();\n        });\n    }\n    getNetworkStatus() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new networkStatus_1.NetworkStatus();\n        });\n    }\n    queryContract(query) {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const responder of this.queryResponders) {\n                if (responder.matches(query)) {\n                    return responder.response;\n                }\n            }\n            return new queryResponse_1.QueryResponse();\n        });\n    }\n}\nexports.MockProvider = MockProvider;\nMockProvider.AddressOfAlice = new address_1.Address(\"erd1qyu5wthldzr8wx5c9ucg8kjagg0jfs53s8nr3zpz3hypefsdd8ssycr6th\");\nMockProvider.AddressOfBob = new address_1.Address(\"erd1spyavw0956vq68xj8y4tenjpq2wd5a9p2c6j8gsz7ztyrnpxrruqzu66jx\");\nMockProvider.AddressOfCarol = new address_1.Address(\"erd1k2s324ww2g0yj38qn2ch2jwctdy8mnfxep94q9arncc6xecg3xaq6mjse8\");\nclass Wait {\n    constructor(milliseconds) {\n        this.milliseconds = milliseconds;\n    }\n}\nexports.Wait = Wait;\nclass MarkNotarized {\n}\nexports.MarkNotarized = MarkNotarized;\nclass AddImmediateResult {\n    constructor(data) {\n        this.data = data;\n    }\n}\nexports.AddImmediateResult = AddImmediateResult;\nclass QueryResponder {\n    constructor(matches, response) {\n        this.matches = matches || ((_) => true);\n        this.response = response || new queryResponse_1.QueryResponse();\n    }\n}\n"},"sourceMaps":{"js":{"version":3,"file":"mockProvider.js","sourceRoot":"","sources":["../../src/testutils/mockProvider.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"error":null,"hash":"ac24e5f9cfce44b10fd3c3c5fb551514","cacheData":{"env":{}}}