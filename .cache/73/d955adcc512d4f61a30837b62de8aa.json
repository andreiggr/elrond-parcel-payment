{"id":"node_modules/@elrondnetwork/erdjs/out/networkStatus.js","dependencies":[{"name":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/networkStatus.js.map","includedInParent":true,"mtime":1647170305062},{"name":"/Users/mac/code/work/bitmarket/elrond-parcel/package.json","includedInParent":true,"mtime":1647174146392},{"name":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/package.json","includedInParent":true,"mtime":1647170304850}],"generated":{"js":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NetworkStatus = void 0;\n/**\n * An object holding network status configuration parameters.\n */\nclass NetworkStatus {\n    constructor() {\n        this.CurrentRound = 0;\n        this.EpochNumber = 0;\n        this.HighestFinalNonce = 0;\n        this.Nonce = 0;\n        this.NonceAtEpochStart = 0;\n        this.NoncesPassedInCurrentEpoch = 0;\n        this.RoundAtEpochStart = 0;\n        this.RoundsPassedInCurrentEpoch = 0;\n        this.RoundsPerEpoch = 0;\n    }\n    /**\n     * Gets the default network status object (think of the Singleton pattern).\n     */\n    static getDefault() {\n        if (!NetworkStatus.default) {\n            NetworkStatus.default = new NetworkStatus();\n        }\n        return NetworkStatus.default;\n    }\n    /**\n     * Synchronizes a configuration object by querying the node, through a {@link IProvider}.\n     * @param provider The provider to use\n     */\n    sync(provider) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let fresh = yield provider.getNetworkStatus();\n            Object.assign(this, fresh);\n        });\n    }\n    /**\n     * Constructs a configuration object from a HTTP response (as returned by the provider).\n     */\n    static fromHttpResponse(payload) {\n        let networkStatus = new NetworkStatus();\n        networkStatus.CurrentRound = Number(payload[\"erd_current_round\"]);\n        networkStatus.EpochNumber = Number(payload[\"erd_epoch_number\"]);\n        networkStatus.HighestFinalNonce = Number(payload[\"erd_highest_final_nonce\"]);\n        networkStatus.Nonce = Number(payload[\"erd_nonce\"]);\n        networkStatus.NonceAtEpochStart = Number(payload[\"erd_nonce_at_epoch_start\"]);\n        networkStatus.NoncesPassedInCurrentEpoch = Number(payload[\"erd_nonces_passed_in_current_epoch\"]);\n        networkStatus.RoundAtEpochStart = Number(payload[\"erd_round_at_epoch_start\"]);\n        networkStatus.RoundsPassedInCurrentEpoch = Number(payload[\"erd_rounds_passed_in_current_epoch\"]);\n        networkStatus.RoundsPerEpoch = Number(payload[\"erd_rounds_per_epoch\"]);\n        return networkStatus;\n    }\n}\nexports.NetworkStatus = NetworkStatus;\n"},"sourceMaps":{"js":{"version":3,"file":"networkStatus.js","sourceRoot":"","sources":["../src/networkStatus.ts"],"names":[],"mappings":";;;;;;;;;;;;AAEA;;GAEG;AACH,MAAa,aAAa;IAgDtB;QACI,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACtB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;QAC3B,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;QAC3B,IAAI,CAAC,0BAA0B,GAAG,CAAC,CAAC;QACpC,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;QAC3B,IAAI,CAAC,0BAA0B,GAAG,CAAC,CAAC;QACpC,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;IAC5B,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,UAAU;QACb,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE;YACxB,aAAa,CAAC,OAAO,GAAG,IAAI,aAAa,EAAE,CAAC;SAC/C;QAED,OAAO,aAAa,CAAC,OAAO,CAAC;IACjC,CAAC;IAED;;;OAGG;IACG,IAAI,CAAC,QAAmB;;YAC1B,IAAI,KAAK,GAAkB,MAAM,QAAQ,CAAC,gBAAgB,EAAE,CAAC;YAC7D,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QAC/B,CAAC;KAAA;IAED;;OAEG;IACH,MAAM,CAAC,gBAAgB,CAAC,OAAY;QAChC,IAAI,aAAa,GAAG,IAAI,aAAa,EAAE,CAAC;QAExC,aAAa,CAAC,YAAY,GAAG,MAAM,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC;QAClE,aAAa,CAAC,WAAW,GAAG,MAAM,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC;QAChE,aAAa,CAAC,iBAAiB,GAAG,MAAM,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC,CAAC;QAC7E,aAAa,CAAC,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;QACnD,aAAa,CAAC,iBAAiB,GAAG,MAAM,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC,CAAC;QAC9E,aAAa,CAAC,0BAA0B,GAAG,MAAM,CAAC,OAAO,CAAC,oCAAoC,CAAC,CAAC,CAAC;QACjG,aAAa,CAAC,iBAAiB,GAAG,MAAM,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC,CAAC;QAC9E,aAAa,CAAC,0BAA0B,GAAG,MAAM,CAAC,OAAO,CAAC,oCAAoC,CAAC,CAAC,CAAC;QACjG,aAAa,CAAC,cAAc,GAAG,MAAM,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC,CAAC;QAEvE,OAAO,aAAa,CAAC;IACzB,CAAC;CACJ;AAlGD,sCAkGC","sourcesContent":[null]}},"error":null,"hash":"01a028a6c96f27dfe9bf4af3c8361277","cacheData":{"env":{}}}