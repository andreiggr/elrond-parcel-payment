{"id":"node_modules/@elrondnetwork/erdjs/out/balance.js","dependencies":[{"name":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/balance.js.map","includedInParent":true,"mtime":1647170304893},{"name":"/Users/mac/code/work/bitmarket/elrond-parcel/package.json","includedInParent":true,"mtime":1647174146392},{"name":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/package.json","includedInParent":true,"mtime":1647170304850},{"name":"bignumber.js","loc":{"line":4,"column":31,"index":134},"parent":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/balance.js","resolved":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/bignumber.js/bignumber.js"},{"name":"./errors","loc":{"line":5,"column":25,"index":176},"parent":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/balance.js","resolved":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/errors.js"},{"name":"./balanceBuilder","loc":{"line":6,"column":33,"index":222},"parent":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/balance.js","resolved":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/balanceBuilder.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Balance = void 0;\nconst bignumber_js_1 = require(\"bignumber.js\");\nconst errors_1 = require(\"./errors\");\nconst balanceBuilder_1 = require(\"./balanceBuilder\");\n/**\n * The number of decimals handled when working with EGLD or ESDT values.\n */\nconst DEFAULT_BIGNUMBER_DECIMAL_PLACES = 18;\nbignumber_js_1.BigNumber.set({ DECIMAL_PLACES: DEFAULT_BIGNUMBER_DECIMAL_PLACES, ROUNDING_MODE: 1 });\n/**\n * Balance, as an immutable object.\n */\nclass Balance {\n    /**\n     * Creates a Balance object.\n     */\n    constructor(token, nonce, value) {\n        this.nonce = new bignumber_js_1.BigNumber(0);\n        this.value = new bignumber_js_1.BigNumber(0);\n        this.token = token;\n        this.nonce = new bignumber_js_1.BigNumber(nonce);\n        this.value = new bignumber_js_1.BigNumber(value);\n    }\n    /**\n     * Creates a balance object from an EGLD value (denomination will be applied).\n     */\n    static egld(value) {\n        return balanceBuilder_1.Egld(value);\n    }\n    /**\n     * Creates a balance object from a string (with denomination included).\n     */\n    static fromString(value) {\n        return balanceBuilder_1.Egld.raw(value || \"0\");\n    }\n    /**\n     * Creates a zero-valued EGLD balance object.\n     */\n    static Zero() {\n        return balanceBuilder_1.Egld(0);\n    }\n    isZero() {\n        return this.value.isZero();\n    }\n    isEgld() {\n        return this.token.isEgld();\n    }\n    isSet() {\n        return !this.isZero();\n    }\n    /**\n     * Returns the string representation of the value (as EGLD currency).\n     */\n    toCurrencyString() {\n        return `${this.toDenominated()} ${this.token.getTokenIdentifier()}`;\n    }\n    toDenominated() {\n        return this.value.shiftedBy(-this.token.decimals).toFixed(this.token.decimals);\n    }\n    /**\n     * Returns the string representation of the value (its big-integer form).\n     */\n    toString() {\n        return this.value.toFixed();\n    }\n    /**\n     * Converts the balance to a pretty, plain JavaScript object.\n     */\n    toJSON() {\n        return {\n            asString: this.toString(),\n            asCurrencyString: this.toCurrencyString()\n        };\n    }\n    getNonce() {\n        return this.nonce;\n    }\n    valueOf() {\n        return this.value;\n    }\n    plus(other) {\n        this.checkSameToken(other);\n        return new Balance(this.token, this.nonce, this.value.plus(other.value));\n    }\n    minus(other) {\n        this.checkSameToken(other);\n        return new Balance(this.token, this.nonce, this.value.minus(other.value));\n    }\n    times(n) {\n        return new Balance(this.token, this.nonce, this.value.times(n));\n    }\n    div(n) {\n        return new Balance(this.token, this.nonce, this.value.div(n));\n    }\n    isEqualTo(other) {\n        this.checkSameToken(other);\n        return this.value.isEqualTo(other.value);\n    }\n    checkSameToken(other) {\n        if (this.token != other.token) {\n            throw new errors_1.ErrInvalidArgument(\"Different token types\");\n        }\n        if (!this.nonce.isEqualTo(other.nonce)) {\n            throw new errors_1.ErrInvalidArgument(\"Different nonces\");\n        }\n    }\n}\nexports.Balance = Balance;\n"},"sourceMaps":{"js":{"version":3,"file":"balance.js","sourceRoot":"","sources":["../src/balance.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"error":null,"hash":"d1f8b02ca1e21a7fbc9c7f4a1ee15348","cacheData":{"env":{}}}