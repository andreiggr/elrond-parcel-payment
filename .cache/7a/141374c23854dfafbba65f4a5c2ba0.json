{"id":"node_modules/@elrondnetwork/erdjs/out/dapp/walletProvider.js","dependencies":[{"name":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/dapp/walletProvider.js.map","includedInParent":true,"mtime":1647170305439},{"name":"/Users/mac/code/work/bitmarket/elrond-parcel/package.json","includedInParent":true,"mtime":1647174146392},{"name":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/package.json","includedInParent":true,"mtime":1647170304850},{"name":"qs","loc":{"line":16,"column":37,"index":967},"parent":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/dapp/walletProvider.js","resolved":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/qs/lib/index.js"},{"name":"./constants","loc":{"line":17,"column":28,"index":1003},"parent":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/dapp/walletProvider.js","resolved":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/dapp/constants.js"},{"name":"../transaction","loc":{"line":18,"column":30,"index":1049},"parent":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/dapp/walletProvider.js","resolved":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/transaction.js"},{"name":"../errors","loc":{"line":19,"column":25,"index":1093},"parent":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/dapp/walletProvider.js","resolved":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/errors.js"},{"name":"../","loc":{"line":20,"column":20,"index":1127},"parent":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/dapp/walletProvider.js","resolved":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/index.js"},{"name":"../signature","loc":{"line":21,"column":28,"index":1163},"parent":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/dapp/walletProvider.js","resolved":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/signature.js"}],"generated":{"js":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletProvider = void 0;\nconst qs_1 = __importDefault(require(\"qs\"));\nconst constants_1 = require(\"./constants\");\nconst transaction_1 = require(\"../transaction\");\nconst errors_1 = require(\"../errors\");\nconst __1 = require(\"../\");\nconst signature_1 = require(\"../signature\");\nclass WalletProvider {\n    /**\n     * Creates a new WalletProvider\n     * @param walletURL\n     */\n    constructor(walletURL = '') {\n        this.walletUrl = walletURL;\n    }\n    /**\n     * Waits for the wallet iframe to ping that it has been initialised\n     */\n    init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return true;\n        });\n    }\n    /**\n     * Returns if the wallet iframe is up and running\n     */\n    isInitialized() {\n        return true;\n    }\n    /**\n     * Unlike isInitialized, isConnected returns true if the user alredy went through the login process\n     *  and has the wallet session active\n     */\n    isConnected() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return false;\n        });\n    }\n    /**\n     * Fetches the login hook url and redirects the client to the wallet login.\n     */\n    login(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let callbackUrl = `callbackUrl=${window.location.href}`;\n            if (options && options.callbackUrl) {\n                callbackUrl = `callbackUrl=${options.callbackUrl}`;\n            }\n            let token = '';\n            if (options && options.token) {\n                token = `&token=${options.token}`;\n            }\n            window.location.href = `${this.baseWalletUrl()}${constants_1.WALLET_PROVIDER_CONNECT_URL}?${callbackUrl}${token}`;\n            return window.location.href;\n        });\n    }\n    /**\n    * Fetches the logout hook url and redirects the client to the wallet logout.\n    */\n    logout(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let callbackUrl = `callbackUrl=${window.location.href}`;\n            if (options && options.callbackUrl) {\n                callbackUrl = `callbackUrl=${options.callbackUrl}`;\n            }\n            window.location.href = `${this.baseWalletUrl()}${constants_1.WALLET_PROVIDER_DISCONNECT_URL}?${callbackUrl}`;\n            return true;\n        });\n    }\n    /**\n     * Returns currently connected address. Empty string if not connected\n     */\n    getAddress() {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new errors_1.ErrNotImplemented();\n        });\n    }\n    /**\n     * Packs a {@link Transaction} and fetches correct redirect URL from the wallet API. Then redirects\n     *   the client to the send transaction hook\n     * @param transaction\n     * @param options\n     */\n    sendTransaction(transaction, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let plainTransaction = WalletProvider.prepareWalletTransaction(transaction);\n            let url = `${this.baseWalletUrl()}${constants_1.WALLET_PROVIDER_SEND_TRANSACTION_URL}?${this.buildTransactionUrl(plainTransaction)}`;\n            window.location.href = `${url}&callbackUrl=${options !== undefined && options.callbackUrl !== undefined ? options.callbackUrl : window.location.href}`;\n            return transaction;\n        });\n    }\n    /**\n     * Packs an array of {$link Transaction} and redirects to the correct transaction sigining hook\n     *\n     * @param transactions\n     * @param options\n     */\n    signTransactions(transactions, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const jsonToSend = {};\n            transactions.map(tx => {\n                let plainTx = WalletProvider.prepareWalletTransaction(tx);\n                for (let txProp in plainTx) {\n                    if (plainTx.hasOwnProperty(txProp) && !jsonToSend.hasOwnProperty(txProp)) {\n                        jsonToSend[txProp] = [];\n                    }\n                    jsonToSend[txProp].push(plainTx[txProp]);\n                }\n            });\n            let url = `${this.baseWalletUrl()}${constants_1.WALLET_PROVIDER_SIGN_TRANSACTION_URL}?${qs_1.default.stringify(jsonToSend)}`;\n            window.location.href = `${url}&callbackUrl=${options !== undefined && options.callbackUrl !== undefined ? options.callbackUrl : window.location.href}`;\n            return transactions;\n        });\n    }\n    /**\n     * Packs a {@link Transaction} and fetches correct redirect URL from the wallet API. Then redirects\n     *   the client to the sign transaction hook\n     * @param transaction\n     * @param options\n     */\n    signTransaction(transaction, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let plainTransaction = WalletProvider.prepareWalletTransaction(transaction);\n            let url = `${this.baseWalletUrl()}${constants_1.WALLET_PROVIDER_SIGN_TRANSACTION_URL}?${this.buildTransactionUrl(plainTransaction)}`;\n            window.location.href = `${url}&callbackUrl=${options !== undefined && options.callbackUrl !== undefined ? options.callbackUrl : window.location.href}`;\n            return transaction;\n        });\n    }\n    getTransactionsFromWalletUrl() {\n        const transactions = [];\n        const urlParams = qs_1.default.parse(window.location.search.slice(1));\n        if (!WalletProvider.isTxSignReturnSuccess(urlParams)) {\n            return transactions;\n        }\n        return WalletProvider.getTxSignReturnValue(urlParams);\n    }\n    /**\n     * Method will be available once the ElrondWallet hook will be implemented\n     * @param _\n     */\n    signMessage(_) {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new errors_1.ErrNotImplemented();\n        });\n    }\n    static isTxSignReturnSuccess(urlParams) {\n        return urlParams.hasOwnProperty(constants_1.WALLET_PROVIDER_CALLBACK_PARAM) && urlParams[constants_1.WALLET_PROVIDER_CALLBACK_PARAM] === constants_1.WALLET_PROVIDER_CALLBACK_PARAM_TX_SIGNED;\n    }\n    static getTxSignReturnValue(urlParams) {\n        const expectedProps = [\"nonce\", \"value\", \"receiver\", \"sender\", \"gasPrice\",\n            \"gasLimit\", \"data\", \"chainID\", \"version\", \"signature\"];\n        for (let txProp of expectedProps) {\n            if (!urlParams[txProp] || !Array.isArray(urlParams[txProp])) {\n                throw new errors_1.ErrInvalidTxSignReturnValue();\n            }\n        }\n        const expectedLength = urlParams[\"nonce\"].length;\n        for (let txProp of expectedProps) {\n            if (urlParams[txProp].length !== expectedLength) {\n                throw new errors_1.ErrInvalidTxSignReturnValue();\n            }\n        }\n        const transactions = [];\n        for (let i = 0; i < expectedLength; i++) {\n            let tx = new transaction_1.Transaction({\n                nonce: new __1.Nonce(urlParams[\"nonce\"][i]),\n                value: __1.Balance.fromString(urlParams[\"value\"][i]),\n                receiver: __1.Address.fromString(urlParams[\"receiver\"][i]),\n                gasPrice: new __1.GasPrice(parseInt(urlParams[\"gasPrice\"][i])),\n                gasLimit: new __1.GasLimit(parseInt(urlParams[\"gasLimit\"][i])),\n                data: new __1.TransactionPayload(urlParams[\"data\"][i]),\n                chainID: new __1.ChainID(urlParams[\"chainID\"][i]),\n                version: new __1.TransactionVersion(parseInt(urlParams[\"version\"][i])),\n            });\n            tx.applySignature(new signature_1.Signature(urlParams[\"signature\"][i]), __1.Address.fromString(urlParams[\"sender\"][i]));\n            transactions.push(tx);\n        }\n        return transactions;\n    }\n    static prepareWalletTransaction(transaction) {\n        let plainTransaction = transaction.toPlainObject();\n        // We adjust the fields, in order to make them compatible with what the wallet expected\n        plainTransaction[\"nonce\"] = transaction.getNonce().valueOf();\n        plainTransaction[\"data\"] = transaction.getData().valueOf().toString();\n        plainTransaction[\"value\"] = transaction.getValue().toString();\n        plainTransaction[\"gasPrice\"] = transaction.getGasPrice().valueOf();\n        plainTransaction[\"gasLimit\"] = transaction.getGasLimit().valueOf();\n        return plainTransaction;\n    }\n    buildTransactionUrl(transaction) {\n        let urlString = `receiver=${transaction.receiver}&value=${transaction.value}`;\n        if (transaction.gasLimit) {\n            urlString += `&gasLimit=${transaction.gasLimit}`;\n        }\n        if (transaction.gasPrice) {\n            urlString += `&gasPrice=${transaction.gasPrice}`;\n        }\n        if (transaction.data) {\n            urlString += `&data=${transaction.data}`;\n        }\n        if (transaction.nonce) {\n            urlString += `&nonce=${transaction.nonce}`;\n        }\n        return urlString;\n    }\n    baseWalletUrl() {\n        const pathArray = this.walletUrl.split('/');\n        const protocol = pathArray[0];\n        const host = pathArray[2];\n        return protocol + '//' + host;\n    }\n}\nexports.WalletProvider = WalletProvider;\n"},"sourceMaps":{"js":{"version":3,"file":"walletProvider.js","sourceRoot":"","sources":["../../src/dapp/walletProvider.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,4CAAoB;AAEpB,2CAOqB;AACrB,gDAA6C;AAE7C,sCAAyE;AACzE,2BAAiH;AACjH,4CAAuC;AAWvC,MAAa,cAAc;IAGvB;;;OAGG;IACH,YAAY,YAAoB,EAAE;QAC9B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC/B,CAAC;IAED;;OAEG;IACG,IAAI;;YACN,OAAO,IAAI,CAAC;QAChB,CAAC;KAAA;IAED;;OAEG;IACH,aAAa;QACT,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;OAGG;IACG,WAAW;;YACb,OAAO,KAAK,CAAC;QACjB,CAAC;KAAA;IAED;;OAEG;IACG,KAAK,CAAC,OAAkD;;YAC1D,IAAI,WAAW,GAAG,eAAe,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YACxD,IAAI,OAAO,IAAI,OAAO,CAAC,WAAW,EAAE;gBAChC,WAAW,GAAG,eAAe,OAAO,CAAC,WAAW,EAAE,CAAC;aACtD;YAED,IAAI,KAAK,GAAG,EAAE,CAAC;YACf,IAAI,OAAO,IAAI,OAAO,CAAC,KAAK,EAAE;gBAC1B,KAAK,GAAG,UAAU,OAAO,CAAC,KAAK,EAAE,CAAC;aACrC;YAED,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,GAAG,IAAI,CAAC,aAAa,EAAE,GAAG,uCAA2B,IAAI,WAAW,GAAG,KAAK,EAAE,CAAC;YACtG,OAAO,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;QAChC,CAAC;KAAA;IAED;;MAEE;IACI,MAAM,CAAC,OAAkC;;YAC3C,IAAI,WAAW,GAAG,eAAe,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YACxD,IAAI,OAAO,IAAI,OAAO,CAAC,WAAW,EAAE;gBAChC,WAAW,GAAG,eAAe,OAAO,CAAC,WAAW,EAAE,CAAC;aACtD;YAED,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,GAAG,IAAI,CAAC,aAAa,EAAE,GAAG,0CAA8B,IAAI,WAAW,EAAE,CAAC;YACjG,OAAO,IAAI,CAAC;QAChB,CAAC;KAAA;IAED;;OAEG;IACG,UAAU;;YACZ,MAAM,IAAI,0BAAiB,EAAE,CAAC;QAClC,CAAC;KAAA;IAED;;;;;OAKG;IACG,eAAe,CAAC,WAAwB,EAAE,OAAkC;;YAC9E,IAAI,gBAAgB,GAAG,cAAc,CAAC,wBAAwB,CAAC,WAAW,CAAC,CAAC;YAC5E,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,aAAa,EAAE,GAAG,gDAAoC,IAAI,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,EAAE,CAAC;YAEzH,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,GAAG,GAAG,gBAAgB,OAAO,KAAK,SAAS,IAAI,OAAO,CAAC,WAAW,KAAK,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YACvJ,OAAO,WAAW,CAAC;QACvB,CAAC;KAAA;IAED;;;;;OAKG;IACG,gBAAgB,CAAC,YAA2B,EAAE,OAAkC;;YAClF,MAAM,UAAU,GAAQ,EAAE,CAAC;YAC3B,YAAY,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;gBAClB,IAAI,OAAO,GAAI,cAAc,CAAC,wBAAwB,CAAC,EAAE,CAAC,CAAC;gBAC3D,KAAM,IAAI,MAAM,IAAI,OAAO,EAAG;oBAC1B,IAAI,OAAO,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE;wBACtE,UAAU,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;qBAC3B;oBAED,UAAU,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;iBAC5C;YACL,CAAC,CAAC,CAAC;YAEH,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,aAAa,EAAE,GAAG,gDAAoC,IAAI,YAAE,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE,CAAC;YACvG,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,GAAG,GAAG,gBAAgB,OAAO,KAAK,SAAS,IAAI,OAAO,CAAC,WAAW,KAAK,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YACvJ,OAAO,YAAY,CAAC;QACxB,CAAC;KAAA;IAED;;;;;OAKG;IACG,eAAe,CAAC,WAAwB,EAAE,OAAkC;;YAC9E,IAAI,gBAAgB,GAAG,cAAc,CAAC,wBAAwB,CAAC,WAAW,CAAC,CAAC;YAC5E,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,aAAa,EAAE,GAAG,gDAAoC,IAAI,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,EAAE,CAAC;YAEzH,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,GAAG,GAAG,gBAAgB,OAAO,KAAK,SAAS,IAAI,OAAO,CAAC,WAAW,KAAK,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YACvJ,OAAO,WAAW,CAAC;QACvB,CAAC;KAAA;IAED,4BAA4B;QACxB,MAAM,YAAY,GAAkB,EAAE,CAAC;QACvC,MAAM,SAAS,GAAG,YAAE,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5D,IAAI,CAAC,cAAc,CAAC,qBAAqB,CAAC,SAAS,CAAC,EAAE;YAClD,OAAO,YAAY,CAAC;SACvB;QAED,OAAO,cAAc,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC;IAC1D,CAAC;IAED;;;OAGG;IACG,WAAW,CAAC,CAAkB;;YAChC,MAAM,IAAI,0BAAiB,EAAE,CAAC;QAClC,CAAC;KAAA;IAED,MAAM,CAAC,qBAAqB,CAAC,SAAc;QACvC,OAAO,SAAS,CAAC,cAAc,CAAC,0CAA8B,CAAC,IAAI,SAAS,CAAC,0CAA8B,CAAC,KAAK,oDAAwC,CAAC;IAC9J,CAAC;IAED,MAAM,CAAC,oBAAoB,CAAC,SAAc;QACtC,MAAM,aAAa,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU;YACrE,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC;QAE3D,KAAK,IAAI,MAAM,IAAI,aAAa,EAAE;YAC9B,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE;gBACzD,MAAM,IAAI,oCAA2B,EAAE,CAAC;aAC3C;SACJ;QAED,MAAM,cAAc,GAAG,SAAS,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC;QACjD,KAAK,IAAI,MAAM,IAAI,aAAa,EAAE;YAC9B,IAAI,SAAS,CAAC,MAAM,CAAC,CAAC,MAAM,KAAK,cAAc,EAAE;gBAC7C,MAAM,IAAI,oCAA2B,EAAE,CAAC;aAC3C;SACJ;QAED,MAAM,YAAY,GAAkB,EAAE,CAAC;QACvC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,EAAE,CAAC,EAAE,EAAE;YACrC,IAAI,EAAE,GAAG,IAAI,yBAAW,CAAC;gBACrB,KAAK,EAAE,IAAI,SAAK,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;gBACvC,KAAK,EAAE,WAAO,CAAC,UAAU,CAAS,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;gBACxD,QAAQ,EAAE,WAAO,CAAC,UAAU,CAAS,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC9D,QAAQ,EAAE,IAAI,YAAQ,CAAC,QAAQ,CAAS,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClE,QAAQ,EAAE,IAAI,YAAQ,CAAC,QAAQ,CAAS,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClE,IAAI,EAAE,IAAI,sBAAkB,CAAS,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1D,OAAO,EAAE,IAAI,WAAO,CAAS,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;gBACrD,OAAO,EAAE,IAAI,sBAAkB,CAAC,QAAQ,CAAS,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aAE7E,CAAC,CAAC;YACH,EAAE,CAAC,cAAc,CAAC,IAAI,qBAAS,CAAS,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,WAAO,CAAC,UAAU,CAAS,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACxH,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SACzB;QAED,OAAO,YAAY,CAAC;IACxB,CAAC;IAED,MAAM,CAAC,wBAAwB,CAAC,WAAwB;QACpD,IAAI,gBAAgB,GAAG,WAAW,CAAC,aAAa,EAAE,CAAC;QAEnD,uFAAuF;QACvF,gBAAgB,CAAC,OAAO,CAAC,GAAG,WAAW,CAAC,QAAQ,EAAE,CAAC,OAAO,EAAE,CAAC;QAC7D,gBAAgB,CAAC,MAAM,CAAC,GAAG,WAAW,CAAC,OAAO,EAAE,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC;QACtE,gBAAgB,CAAC,OAAO,CAAC,GAAG,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC;QAC9D,gBAAgB,CAAC,UAAU,CAAC,GAAG,WAAW,CAAC,WAAW,EAAE,CAAC,OAAO,EAAE,CAAC;QACnE,gBAAgB,CAAC,UAAU,CAAC,GAAG,WAAW,CAAC,WAAW,EAAE,CAAC,OAAO,EAAE,CAAC;QAEnE,OAAO,gBAAgB,CAAC;IAC5B,CAAC;IAEO,mBAAmB,CAAC,WAA+B;QACvD,IAAI,SAAS,GAAG,YAAY,WAAW,CAAC,QAAQ,UAAU,WAAW,CAAC,KAAK,EAAE,CAAC;QAC9E,IAAI,WAAW,CAAC,QAAQ,EAAE;YACtB,SAAS,IAAI,aAAa,WAAW,CAAC,QAAQ,EAAE,CAAC;SACpD;QACD,IAAI,WAAW,CAAC,QAAQ,EAAE;YACtB,SAAS,IAAI,aAAa,WAAW,CAAC,QAAQ,EAAE,CAAC;SACpD;QACD,IAAI,WAAW,CAAC,IAAI,EAAE;YAClB,SAAS,IAAI,SAAS,WAAW,CAAC,IAAI,EAAE,CAAC;SAC5C;QACD,IAAI,WAAW,CAAC,KAAK,EAAE;YACnB,SAAS,IAAI,UAAU,WAAW,CAAC,KAAK,EAAE,CAAC;SAC9C;QAED,OAAO,SAAS,CAAC;IACrB,CAAC;IAEO,aAAa;QACjB,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC5C,MAAM,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;QAC9B,MAAM,IAAI,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;QAC1B,OAAO,QAAQ,GAAG,IAAI,GAAG,IAAI,CAAC;IAClC,CAAC;CACJ;AA3ND,wCA2NC","sourcesContent":[null]}},"error":null,"hash":"3622b88a742a24c0635b9834e86ee68f","cacheData":{"env":{}}}