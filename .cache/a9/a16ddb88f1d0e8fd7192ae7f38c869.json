{"id":"node_modules/ed25519-hd-key/dist/index.js","dependencies":[{"name":"/Users/mac/code/work/bitmarket/elrond-parcel/package.json","includedInParent":true,"mtime":1647174146392},{"name":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/ed25519-hd-key/package.json","includedInParent":true,"mtime":1647170297783},{"name":"create-hmac","loc":{"line":3,"column":27,"index":104},"parent":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/ed25519-hd-key/dist/index.js","resolved":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/create-hmac/browser.js"},{"name":"tweetnacl","loc":{"line":4,"column":21,"index":141},"parent":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/ed25519-hd-key/dist/index.js","resolved":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/tweetnacl/nacl-fast.js"},{"name":"./utils","loc":{"line":5,"column":24,"index":179},"parent":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/ed25519-hd-key/dist/index.js","resolved":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/ed25519-hd-key/dist/utils.js"},{"name":"buffer","parent":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/ed25519-hd-key/dist/index.js","resolved":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst createHmac = require(\"create-hmac\");\nconst nacl = require(\"tweetnacl\");\nconst utils_1 = require(\"./utils\");\nconst ED25519_CURVE = 'ed25519 seed';\nconst HARDENED_OFFSET = 0x80000000;\nexports.getMasterKeyFromSeed = (seed) => {\n    const hmac = createHmac('sha512', ED25519_CURVE);\n    const I = hmac.update(Buffer.from(seed, 'hex')).digest();\n    const IL = I.slice(0, 32);\n    const IR = I.slice(32);\n    return {\n        key: IL,\n        chainCode: IR,\n    };\n};\nconst CKDPriv = ({ key, chainCode }, index) => {\n    const indexBuffer = Buffer.allocUnsafe(4);\n    indexBuffer.writeUInt32BE(index, 0);\n    const data = Buffer.concat([Buffer.alloc(1, 0), key, indexBuffer]);\n    const I = createHmac('sha512', chainCode)\n        .update(data)\n        .digest();\n    const IL = I.slice(0, 32);\n    const IR = I.slice(32);\n    return {\n        key: IL,\n        chainCode: IR,\n    };\n};\nexports.getPublicKey = (privateKey, withZeroByte = true) => {\n    const keyPair = nacl.sign.keyPair.fromSeed(privateKey);\n    const signPk = keyPair.secretKey.subarray(32);\n    const zero = Buffer.alloc(1, 0);\n    return withZeroByte ?\n        Buffer.concat([zero, Buffer.from(signPk)]) :\n        Buffer.from(signPk);\n};\nexports.isValidPath = (path) => {\n    if (!utils_1.pathRegex.test(path)) {\n        return false;\n    }\n    return !path\n        .split('/')\n        .slice(1)\n        .map(utils_1.replaceDerive)\n        .some(isNaN);\n};\nexports.derivePath = (path, seed) => {\n    if (!exports.isValidPath(path)) {\n        throw new Error('Invalid derivation path');\n    }\n    const { key, chainCode } = exports.getMasterKeyFromSeed(seed);\n    const segments = path\n        .split('/')\n        .slice(1)\n        .map(utils_1.replaceDerive)\n        .map(el => parseInt(el, 10));\n    return segments.reduce((parentKeys, segment) => CKDPriv(parentKeys, segment + HARDENED_OFFSET), { key, chainCode });\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/ed25519-hd-key/dist/index.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}}],"sources":{"node_modules/ed25519-hd-key/dist/index.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst createHmac = require(\"create-hmac\");\nconst nacl = require(\"tweetnacl\");\nconst utils_1 = require(\"./utils\");\nconst ED25519_CURVE = 'ed25519 seed';\nconst HARDENED_OFFSET = 0x80000000;\nexports.getMasterKeyFromSeed = (seed) => {\n    const hmac = createHmac('sha512', ED25519_CURVE);\n    const I = hmac.update(Buffer.from(seed, 'hex')).digest();\n    const IL = I.slice(0, 32);\n    const IR = I.slice(32);\n    return {\n        key: IL,\n        chainCode: IR,\n    };\n};\nconst CKDPriv = ({ key, chainCode }, index) => {\n    const indexBuffer = Buffer.allocUnsafe(4);\n    indexBuffer.writeUInt32BE(index, 0);\n    const data = Buffer.concat([Buffer.alloc(1, 0), key, indexBuffer]);\n    const I = createHmac('sha512', chainCode)\n        .update(data)\n        .digest();\n    const IL = I.slice(0, 32);\n    const IR = I.slice(32);\n    return {\n        key: IL,\n        chainCode: IR,\n    };\n};\nexports.getPublicKey = (privateKey, withZeroByte = true) => {\n    const keyPair = nacl.sign.keyPair.fromSeed(privateKey);\n    const signPk = keyPair.secretKey.subarray(32);\n    const zero = Buffer.alloc(1, 0);\n    return withZeroByte ?\n        Buffer.concat([zero, Buffer.from(signPk)]) :\n        Buffer.from(signPk);\n};\nexports.isValidPath = (path) => {\n    if (!utils_1.pathRegex.test(path)) {\n        return false;\n    }\n    return !path\n        .split('/')\n        .slice(1)\n        .map(utils_1.replaceDerive)\n        .some(isNaN);\n};\nexports.derivePath = (path, seed) => {\n    if (!exports.isValidPath(path)) {\n        throw new Error('Invalid derivation path');\n    }\n    const { key, chainCode } = exports.getMasterKeyFromSeed(seed);\n    const segments = path\n        .split('/')\n        .slice(1)\n        .map(utils_1.replaceDerive)\n        .map(el => parseInt(el, 10));\n    return segments.reduce((parentKeys, segment) => CKDPriv(parentKeys, segment + HARDENED_OFFSET), { key, chainCode });\n};\n"},"lineCount":63}},"error":null,"hash":"ccfdb2a361234412e6b9b28a2b1e837c","cacheData":{"env":{}}}