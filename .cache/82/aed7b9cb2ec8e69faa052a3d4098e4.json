{"id":"node_modules/@elrondnetwork/erdjs/out/crypto/derivationParams.js","dependencies":[{"name":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/crypto/derivationParams.js.map","includedInParent":true,"mtime":1647170304952},{"name":"/Users/mac/code/work/bitmarket/elrond-parcel/package.json","includedInParent":true,"mtime":1647174146392},{"name":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/package.json","includedInParent":true,"mtime":1647170304850},{"name":"scryptsy","loc":{"line":7,"column":43,"index":303},"parent":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/crypto/derivationParams.js","resolved":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/scryptsy/lib/index.js"}],"generated":{"js":"\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ScryptKeyDerivationParams = void 0;\nconst scryptsy_1 = __importDefault(require(\"scryptsy\"));\nclass ScryptKeyDerivationParams {\n    constructor(n = 4096, r = 8, p = 1, dklen = 32) {\n        /**\n         * numIterations\n         */\n        this.n = 4096;\n        /**\n         * memFactor\n         */\n        this.r = 8;\n        /**\n         * pFactor\n         */\n        this.p = 1;\n        this.dklen = 32;\n        this.n = n;\n        this.r = r;\n        this.p = p;\n        this.dklen = dklen;\n    }\n    /**\n     * Will take about:\n     *  - 80-90 ms in Node.js, on a i3-8100 CPU @ 3.60GHz\n     *  - 350-360 ms in browser (Firefox), on a i3-8100 CPU @ 3.60GHz\n     */\n    generateDerivedKey(password, salt) {\n        return scryptsy_1.default(password, salt, this.n, this.r, this.p, this.dklen);\n    }\n}\nexports.ScryptKeyDerivationParams = ScryptKeyDerivationParams;\n"},"sourceMaps":{"js":{"version":3,"file":"derivationParams.js","sourceRoot":"","sources":["../../src/crypto/derivationParams.ts"],"names":[],"mappings":";;;;;;AAAA,wDAAgC;AAEhC,MAAa,yBAAyB;IAkBpC,YAAY,CAAC,GAAG,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,KAAK,GAAG,EAAE;QAjB9C;;WAEG;QACH,MAAC,GAAG,IAAI,CAAC;QAET;;WAEG;QACH,MAAC,GAAG,CAAC,CAAC;QAEN;;WAEG;QACH,MAAC,GAAG,CAAC,CAAC;QAEN,UAAK,GAAG,EAAE,CAAC;QAGT,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAE,CAAC,GAAG,CAAC,CAAC;QACZ,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IAED;;;;OAIG;IACI,kBAAkB,CAAC,QAAgB,EAAE,IAAY;QACtD,OAAO,kBAAQ,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IACtE,CAAC;CACF;AAjCD,8DAiCC","sourcesContent":[null]}},"error":null,"hash":"78a053072af2f43bb8cb155def73a679","cacheData":{"env":{}}}