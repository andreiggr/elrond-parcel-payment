{"id":"node_modules/@elrondnetwork/erdjs/out/smartcontracts/interaction.js","dependencies":[{"name":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/smartcontracts/interaction.js.map","includedInParent":true,"mtime":1647170305030},{"name":"/Users/mac/code/work/bitmarket/elrond-parcel/package.json","includedInParent":true,"mtime":1647174146392},{"name":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/package.json","includedInParent":true,"mtime":1647170304850},{"name":"../balance","loc":{"line":4,"column":26,"index":133},"parent":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/smartcontracts/interaction.js","resolved":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/balance.js"},{"name":"../networkParams","loc":{"line":5,"column":32,"index":180},"parent":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/smartcontracts/interaction.js","resolved":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/networkParams.js"},{"name":"./query","loc":{"line":6,"column":24,"index":225},"parent":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/smartcontracts/interaction.js","resolved":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/smartcontracts/query.js"},{"name":"../address","loc":{"line":7,"column":26,"index":263},"parent":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/smartcontracts/interaction.js","resolved":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/address.js"},{"name":"../nonce","loc":{"line":8,"column":24,"index":302},"parent":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/smartcontracts/interaction.js","resolved":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/nonce.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Interaction = void 0;\nconst balance_1 = require(\"../balance\");\nconst networkParams_1 = require(\"../networkParams\");\nconst query_1 = require(\"./query\");\nconst address_1 = require(\"../address\");\nconst nonce_1 = require(\"../nonce\");\n/**\n * Interactions can be seen as mutable transaction & query builders.\n *\n * Aside from building transactions and queries, the interactors are also responsible for interpreting\n * the execution outcome for the objects they've built.\n */\nclass Interaction {\n    constructor(contract, executingFunction, interpretingFunction, args, receiver) {\n        this.nonce = new nonce_1.Nonce(0);\n        this.value = balance_1.Balance.Zero();\n        this.gasLimit = networkParams_1.GasLimit.min();\n        this.contract = contract;\n        this.executingFunction = executingFunction;\n        this.interpretingFunction = interpretingFunction;\n        this.args = args;\n        this.receiver = receiver;\n    }\n    getContract() {\n        return this.contract;\n    }\n    getInterpretingFunction() {\n        return this.interpretingFunction;\n    }\n    getExecutingFunction() {\n        return this.executingFunction;\n    }\n    getArguments() {\n        return this.args;\n    }\n    getValue() {\n        return this.value;\n    }\n    getGasLimit() {\n        return this.gasLimit;\n    }\n    buildTransaction() {\n        // TODO: create as \"deploy\" transaction if the function is \"init\" (or find a better pattern for deployments).\n        let transaction = this.contract.call({\n            func: this.executingFunction,\n            // GasLimit will be set using \"withGasLimit()\".\n            gasLimit: this.gasLimit,\n            args: this.args,\n            // Value will be set using \"withValue()\".\n            value: this.value,\n            receiver: this.receiver,\n        });\n        transaction.setNonce(this.nonce);\n        return transaction;\n    }\n    buildQuery() {\n        return new query_1.Query({\n            address: this.contract.getAddress(),\n            func: this.executingFunction,\n            args: this.args,\n            // Value will be set using \"withValue()\".\n            value: this.value,\n            // Caller will be set by the InteractionRunner.\n            caller: new address_1.Address()\n        });\n    }\n    /**\n     * Interprets the results of a previously broadcasted (and fully executed) smart contract transaction.\n     * The outcome is structured such that it allows quick access to each level of detail.\n     */\n    interpretExecutionResults(transactionOnNetwork) {\n        return interpretExecutionResults(this.getEndpoint(), transactionOnNetwork);\n    }\n    /**\n     * Interprets the raw outcome of a Smart Contract query.\n     * The outcome is structured such that it allows quick access to each level of detail.\n     */\n    interpretQueryResponse(queryResponse) {\n        let endpoint = this.getEndpoint();\n        queryResponse.setEndpointDefinition(endpoint);\n        let values = queryResponse.outputTyped();\n        let returnCode = queryResponse.returnCode;\n        return {\n            queryResponse: queryResponse,\n            values: values,\n            firstValue: values[0],\n            returnCode: returnCode\n        };\n    }\n    withValue(value) {\n        this.value = value;\n        return this;\n    }\n    withGasLimit(gasLimit) {\n        this.gasLimit = gasLimit;\n        return this;\n    }\n    withNonce(nonce) {\n        this.nonce = nonce;\n        return this;\n    }\n    getEndpoint() {\n        return this.getContract().getAbi().getEndpoint(this.getInterpretingFunction());\n    }\n}\nexports.Interaction = Interaction;\nfunction interpretExecutionResults(endpoint, transactionOnNetwork) {\n    let smartContractResults = transactionOnNetwork.getSmartContractResults();\n    let immediateResult = smartContractResults.getImmediate();\n    let resultingCalls = smartContractResults.getResultingCalls();\n    immediateResult.setEndpointDefinition(endpoint);\n    let values = immediateResult.outputTyped();\n    let returnCode = immediateResult.getReturnCode();\n    return {\n        transactionOnNetwork: transactionOnNetwork,\n        smartContractResults: smartContractResults,\n        immediateResult,\n        resultingCalls,\n        values,\n        firstValue: values[0],\n        returnCode: returnCode\n    };\n}\n"},"sourceMaps":{"js":{"version":3,"file":"interaction.js","sourceRoot":"","sources":["../../src/smartcontracts/interaction.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"error":null,"hash":"8d340864bd289eb1a7a20c5ab35af852","cacheData":{"env":{}}}