{"id":"node_modules/@elrondnetwork/erdjs/out/account.js","dependencies":[{"name":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/account.js.map","includedInParent":true,"mtime":1647170304865},{"name":"/Users/mac/code/work/bitmarket/elrond-parcel/package.json","includedInParent":true,"mtime":1647174146392},{"name":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/package.json","includedInParent":true,"mtime":1647170304850},{"name":"./address","loc":{"line":13,"column":26,"index":837},"parent":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/account.js","resolved":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/address.js"},{"name":"./nonce","loc":{"line":14,"column":24,"index":875},"parent":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/account.js","resolved":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/nonce.js"},{"name":"./balance","loc":{"line":15,"column":26,"index":913},"parent":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/account.js","resolved":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/balance.js"},{"name":"./balanceBuilder","loc":{"line":16,"column":33,"index":960},"parent":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/account.js","resolved":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/balanceBuilder.js"}],"generated":{"js":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AccountOnNetwork = exports.Account = void 0;\nconst address_1 = require(\"./address\");\nconst nonce_1 = require(\"./nonce\");\nconst balance_1 = require(\"./balance\");\nconst balanceBuilder_1 = require(\"./balanceBuilder\");\n/**\n * An abstraction representing an account (user or Smart Contract) on the Network.\n */\nclass Account {\n    /**\n     * Creates an account object from an address\n     */\n    constructor(address) {\n        /**\n         * The address of the account.\n         */\n        this.address = new address_1.Address();\n        /**\n         * The nonce of the account (the account sequence number).\n         */\n        this.nonce = new nonce_1.Nonce(0);\n        /**\n         * The balance of the account.\n         */\n        this.balance = balanceBuilder_1.Egld(\"0\");\n        this.asOnNetwork = new AccountOnNetwork();\n        this.address = address;\n    }\n    /**\n     * Queries the details of the account on the Network\n     * @param provider the Network provider\n     * @param cacheLocally whether to save the query response within the object, locally\n     */\n    getAsOnNetwork(provider, cacheLocally = true) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.address.assertNotEmpty();\n            let response = yield provider.getAccount(this.address);\n            if (cacheLocally) {\n                this.asOnNetwork = response;\n            }\n            return response;\n        });\n    }\n    /**\n     * Gets a previously saved query response\n     */\n    getAsOnNetworkCached() {\n        return this.asOnNetwork;\n    }\n    /**\n     * Synchronizes account properties (such as nonce, balance) with the ones queried from the Network\n     * @param provider the Network provider\n     */\n    sync(provider) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getAsOnNetwork(provider, true);\n            this.nonce = this.asOnNetwork.nonce;\n            this.balance = this.asOnNetwork.balance;\n        });\n    }\n    /**\n     * Increments (locally) the nonce (the account sequence number).\n     */\n    incrementNonce() {\n        this.nonce = this.nonce.increment();\n    }\n    /**\n     * Gets then increments (locally) the nonce (the account sequence number).\n     */\n    getNonceThenIncrement() {\n        let nonce = this.nonce;\n        this.nonce = this.nonce.increment();\n        return nonce;\n    }\n    /**\n     * Converts the account to a pretty, plain JavaScript object.\n     */\n    toJSON() {\n        return {\n            address: this.address.bech32(),\n            nonce: this.nonce.valueOf(),\n            balance: this.balance.toString(),\n        };\n    }\n}\nexports.Account = Account;\n/**\n * A plain view of an account, as queried from the Network.\n */\nclass AccountOnNetwork {\n    constructor(init) {\n        this.address = new address_1.Address();\n        this.nonce = new nonce_1.Nonce(0);\n        this.balance = balanceBuilder_1.Egld(0);\n        this.code = \"\";\n        this.userName = \"\";\n        Object.assign(this, init);\n    }\n    static fromHttpResponse(payload) {\n        let result = new AccountOnNetwork();\n        result.address = new address_1.Address(payload[\"address\"] || 0);\n        result.nonce = new nonce_1.Nonce(payload[\"nonce\"] || 0);\n        result.balance = balance_1.Balance.fromString(payload[\"balance\"]);\n        result.code = payload[\"code\"];\n        result.userName = payload[\"username\"];\n        return result;\n    }\n}\nexports.AccountOnNetwork = AccountOnNetwork;\n"},"sourceMaps":{"js":{"version":3,"file":"account.js","sourceRoot":"","sources":["../src/account.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"error":null,"hash":"f32d9dee16856ec27ed92f7386bdac42","cacheData":{"env":{}}}