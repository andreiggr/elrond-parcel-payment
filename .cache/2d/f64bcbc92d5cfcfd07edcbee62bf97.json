{"id":"node_modules/@elrondnetwork/erdjs/out/smartcontracts/typesystem/enum.js","dependencies":[{"name":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/smartcontracts/typesystem/enum.js.map","includedInParent":true,"mtime":1647170304973},{"name":"/Users/mac/code/work/bitmarket/elrond-parcel/package.json","includedInParent":true,"mtime":1647174146392},{"name":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/package.json","includedInParent":true,"mtime":1647170304850},{"name":"../../utils","loc":{"line":4,"column":24,"index":180},"parent":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/smartcontracts/typesystem/enum.js","resolved":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/utils.js"},{"name":"./types","loc":{"line":5,"column":24,"index":220},"parent":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/smartcontracts/typesystem/enum.js","resolved":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/smartcontracts/typesystem/types.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EnumValue = exports.EnumVariantDefinition = exports.EnumType = void 0;\nconst utils_1 = require(\"../../utils\");\nconst types_1 = require(\"./types\");\nconst SimpleEnumMaxDiscriminant = 256;\nclass EnumType extends types_1.CustomType {\n    constructor(name, variants) {\n        super(name);\n        this.variants = [];\n        this.variants = variants;\n    }\n    static fromJSON(json) {\n        let variants = (json.variants || []).map(variant => EnumVariantDefinition.fromJSON(variant));\n        return new EnumType(json.name, variants);\n    }\n    getVariantByDiscriminant(discriminant) {\n        let result = this.variants.find(e => e.discriminant == discriminant);\n        utils_1.guardValueIsSet(\"result\", result);\n        return result;\n    }\n    getVariantByName(name) {\n        let result = this.variants.find(e => e.name == name);\n        utils_1.guardValueIsSet(\"result\", result);\n        return result;\n    }\n}\nexports.EnumType = EnumType;\nclass EnumVariantDefinition {\n    constructor(name, discriminant) {\n        utils_1.guardTrue(discriminant < SimpleEnumMaxDiscriminant, `discriminant for simple enum should be less than ${SimpleEnumMaxDiscriminant}`);\n        this.name = name;\n        this.discriminant = discriminant;\n    }\n    static fromJSON(json) {\n        return new EnumVariantDefinition(json.name, json.discriminant);\n    }\n}\nexports.EnumVariantDefinition = EnumVariantDefinition;\nclass EnumValue extends types_1.TypedValue {\n    constructor(type, variant) {\n        super(type);\n        this.name = variant.name;\n        this.discriminant = variant.discriminant;\n    }\n    static fromName(type, name) {\n        let variant = type.getVariantByName(name);\n        return new EnumValue(type, variant);\n    }\n    static fromDiscriminant(type, discriminant) {\n        let variant = type.getVariantByDiscriminant(discriminant);\n        return new EnumValue(type, variant);\n    }\n    equals(other) {\n        if (!this.getType().equals(other.getType())) {\n            return false;\n        }\n        return this.name == other.name && this.discriminant == other.discriminant;\n    }\n    valueOf() {\n        return this.name;\n    }\n}\nexports.EnumValue = EnumValue;\n"},"sourceMaps":{"js":{"version":3,"file":"enum.js","sourceRoot":"","sources":["../../../src/smartcontracts/typesystem/enum.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"error":null,"hash":"9dd135bc65e6bd2f8f682cb12afa0cad","cacheData":{"env":{}}}