{"id":"node_modules/@elrondnetwork/erdjs/out/smartcontracts/transactionPayloadBuilders.js","dependencies":[{"name":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/smartcontracts/transactionPayloadBuilders.js.map","includedInParent":true,"mtime":1647170305378},{"name":"/Users/mac/code/work/bitmarket/elrond-parcel/package.json","includedInParent":true,"mtime":1647174146392},{"name":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/package.json","includedInParent":true,"mtime":1647170304850},{"name":"../transactionPayload","loc":{"line":4,"column":37,"index":268},"parent":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/smartcontracts/transactionPayloadBuilders.js","resolved":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/transactionPayload.js"},{"name":"../utils","loc":{"line":5,"column":24,"index":318},"parent":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/smartcontracts/transactionPayloadBuilders.js","resolved":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/utils.js"},{"name":"./codeMetadata","loc":{"line":6,"column":31,"index":362},"parent":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/smartcontracts/transactionPayloadBuilders.js","resolved":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/smartcontracts/codeMetadata.js"},{"name":"./argSerializer","loc":{"line":7,"column":32,"index":413},"parent":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/smartcontracts/transactionPayloadBuilders.js","resolved":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/smartcontracts/argSerializer.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ContractCallPayloadBuilder = exports.ContractUpgradePayloadBuilder = exports.ContractDeployPayloadBuilder = exports.ArwenVirtualMachine = void 0;\nconst transactionPayload_1 = require(\"../transactionPayload\");\nconst utils_1 = require(\"../utils\");\nconst codeMetadata_1 = require(\"./codeMetadata\");\nconst argSerializer_1 = require(\"./argSerializer\");\nexports.ArwenVirtualMachine = \"0500\";\n/**\n * A builder for {@link TransactionPayload} objects, to be used for Smart Contract deployment transactions.\n */\nclass ContractDeployPayloadBuilder {\n    constructor() {\n        this.code = null;\n        this.codeMetadata = new codeMetadata_1.CodeMetadata();\n        this.arguments = [];\n    }\n    /**\n     * Sets the code of the Smart Contract.\n     */\n    setCode(code) {\n        this.code = code;\n        return this;\n    }\n    /**\n     * Sets the code metadata of the Smart Contract.\n     */\n    setCodeMetadata(codeMetadata) {\n        this.codeMetadata = codeMetadata;\n        return this;\n    }\n    /**\n     * Adds constructor (`init`) arguments.\n     */\n    addInitArg(arg) {\n        this.arguments.push(arg);\n        return this;\n    }\n    /**\n     * Sets constructor (`init`) arguments.\n     */\n    setInitArgs(args) {\n        this.arguments = args;\n        return this;\n    }\n    /**\n     * Builds the {@link TransactionPayload}.\n     */\n    build() {\n        utils_1.guardValueIsSet(\"code\", this.code);\n        let code = this.code.toString();\n        let codeMetadata = this.codeMetadata.toString();\n        let data = `${code}@${exports.ArwenVirtualMachine}@${codeMetadata}`;\n        data = appendArgumentsToString(data, this.arguments);\n        return new transactionPayload_1.TransactionPayload(data);\n    }\n}\nexports.ContractDeployPayloadBuilder = ContractDeployPayloadBuilder;\n/**\n * A builder for {@link TransactionPayload} objects, to be used for Smart Contract upgrade transactions.\n */\nclass ContractUpgradePayloadBuilder {\n    constructor() {\n        this.code = null;\n        this.codeMetadata = new codeMetadata_1.CodeMetadata();\n        this.arguments = [];\n    }\n    /**\n     * Sets the code of the Smart Contract.\n     */\n    setCode(code) {\n        this.code = code;\n        return this;\n    }\n    /**\n     * Sets the code metadata of the Smart Contract.\n     */\n    setCodeMetadata(codeMetadata) {\n        this.codeMetadata = codeMetadata;\n        return this;\n    }\n    /**\n     * Adds upgrade (`init`) arguments.\n     */\n    addInitArg(arg) {\n        this.arguments.push(arg);\n        return this;\n    }\n    /**\n     * Sets upgrade (`init`) arguments.\n     */\n    setInitArgs(args) {\n        this.arguments = args;\n        return this;\n    }\n    /**\n     * Builds the {@link TransactionPayload}.\n     */\n    build() {\n        utils_1.guardValueIsSet(\"code\", this.code);\n        let code = this.code.toString();\n        let codeMetadata = this.codeMetadata.toString();\n        let data = `upgradeContract@${code}@${codeMetadata}`;\n        data = appendArgumentsToString(data, this.arguments);\n        return new transactionPayload_1.TransactionPayload(data);\n    }\n}\nexports.ContractUpgradePayloadBuilder = ContractUpgradePayloadBuilder;\n/**\n * A builder for {@link TransactionPayload} objects, to be used for Smart Contract execution transactions.\n */\nclass ContractCallPayloadBuilder {\n    constructor() {\n        this.contractFunction = null;\n        this.arguments = [];\n    }\n    /**\n     * Sets the function to be called (executed).\n     */\n    setFunction(contractFunction) {\n        this.contractFunction = contractFunction;\n        return this;\n    }\n    /**\n     * Adds a function argument.\n     */\n    addArg(arg) {\n        this.arguments.push(arg);\n        return this;\n    }\n    /**\n     * Sets the function arguments.\n     */\n    setArgs(args) {\n        this.arguments = args;\n        return this;\n    }\n    /**\n     * Builds the {@link TransactionPayload}.\n     */\n    build() {\n        utils_1.guardValueIsSet(\"calledFunction\", this.contractFunction);\n        let data = this.contractFunction.name;\n        data = appendArgumentsToString(data, this.arguments);\n        return new transactionPayload_1.TransactionPayload(data);\n    }\n}\nexports.ContractCallPayloadBuilder = ContractCallPayloadBuilder;\nfunction appendArgumentsToString(to, values) {\n    if (values.length == 0) {\n        return to;\n    }\n    let argumentsString = new argSerializer_1.ArgSerializer().valuesToString(values);\n    return `${to}@${argumentsString}`;\n}\n"},"sourceMaps":{"js":{"version":3,"file":"transactionPayloadBuilders.js","sourceRoot":"","sources":["../../src/smartcontracts/transactionPayloadBuilders.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"error":null,"hash":"882e7d6dc7d420ac24464d89e39f2e3a","cacheData":{"env":{}}}