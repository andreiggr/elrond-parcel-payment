{"id":"node_modules/@elrondnetwork/erdjs/out/smartcontracts/typesystem/tuple.js","dependencies":[{"name":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/smartcontracts/typesystem/tuple.js.map","includedInParent":true,"mtime":1647170305386},{"name":"/Users/mac/code/work/bitmarket/elrond-parcel/package.json","includedInParent":true,"mtime":1647174146392},{"name":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/package.json","includedInParent":true,"mtime":1647170304850},{"name":"../../errors","loc":{"line":23,"column":36,"index":1016},"parent":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/smartcontracts/typesystem/tuple.js","resolved":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/errors.js"},{"name":"./struct","loc":{"line":25,"column":25,"index":1097},"parent":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/smartcontracts/typesystem/tuple.js","resolved":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/smartcontracts/typesystem/struct.js"}],"generated":{"js":"\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Tuple = exports.TupleType = void 0;\nconst errors = __importStar(require(\"../../errors\"));\nconst struct_1 = require(\"./struct\");\nconst struct_2 = require(\"./struct\");\nclass TupleType extends struct_2.StructType {\n    constructor(...typeParameters) {\n        super(TupleType.prepareName(typeParameters), TupleType.prepareFieldDefinitions(typeParameters));\n    }\n    static prepareName(typeParameters) {\n        let fields = typeParameters.map(type => type.toString()).join(\", \");\n        let result = `tuple${fields.length}<${fields}>`;\n        return result;\n    }\n    static prepareFieldDefinitions(typeParameters) {\n        let result = typeParameters.map((type, i) => new struct_1.StructFieldDefinition(prepareFieldName(i), \"anonymous tuple field\", type));\n        return result;\n    }\n}\nexports.TupleType = TupleType;\nfunction prepareFieldName(fieldIndex) {\n    return `field${fieldIndex}`;\n}\n// TODO: Perhaps add a common base class for Struct and Tuple, called FieldsHolder?\n// Or let Tuple be the base class, but have Struct as a specialization of it, \"named tuple\"?\n// Or leave as it is?\nclass Tuple extends struct_1.Struct {\n    constructor(type, fields) {\n        super(type, fields);\n    }\n    static fromItems(items) {\n        if (items.length < 1) {\n            // TODO: Define a better error.\n            throw new errors.ErrTypingSystem(\"bad tuple items\");\n        }\n        let fieldsTypes = items.map(item => item.getType());\n        let tupleType = new TupleType(...fieldsTypes);\n        let fields = items.map((item, i) => new struct_1.StructField(item, prepareFieldName(i)));\n        return new Tuple(tupleType, fields);\n    }\n}\nexports.Tuple = Tuple;\n"},"sourceMaps":{"js":{"version":3,"file":"tuple.js","sourceRoot":"","sources":["../../../src/smartcontracts/typesystem/tuple.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,qDAAuC;AACvC,qCAAsE;AAEtE,qCAAsC;AAEtC,MAAa,SAAU,SAAQ,mBAAU;IACrC,YAAY,GAAG,cAAsB;QACjC,KAAK,CAAC,SAAS,CAAC,WAAW,CAAC,cAAc,CAAC,EAAE,SAAS,CAAC,uBAAuB,CAAC,cAAc,CAAC,CAAC,CAAC;IACpG,CAAC;IAEO,MAAM,CAAC,WAAW,CAAC,cAAsB;QAC7C,IAAI,MAAM,GAAW,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5E,IAAI,MAAM,GAAG,QAAQ,MAAM,CAAC,MAAM,IAAI,MAAM,GAAG,CAAC;QAChD,OAAO,MAAM,CAAC;IAClB,CAAC;IAEO,MAAM,CAAC,uBAAuB,CAAC,cAAsB;QACzD,IAAI,MAAM,GAAG,cAAc,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,8BAAqB,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE,uBAAuB,EAAE,IAAI,CAAC,CAAC,CAAC;QAC5H,OAAO,MAAM,CAAC;IAClB,CAAC;CACJ;AAfD,8BAeC;AAED,SAAS,gBAAgB,CAAC,UAAkB;IACxC,OAAO,QAAQ,UAAU,EAAE,CAAC;AAChC,CAAC;AAED,mFAAmF;AACnF,4FAA4F;AAC5F,qBAAqB;AACrB,MAAa,KAAM,SAAQ,eAAM;IAC7B,YAAY,IAAe,EAAE,MAAqB;QAC9C,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IACxB,CAAC;IAED,MAAM,CAAC,SAAS,CAAC,KAAmB;QAChC,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YAClB,+BAA+B;YAC/B,MAAM,IAAI,MAAM,CAAC,eAAe,CAAC,iBAAiB,CAAC,CAAC;SACvD;QAED,IAAI,WAAW,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;QACpD,IAAI,SAAS,GAAG,IAAI,SAAS,CAAC,GAAG,WAAW,CAAC,CAAC;QAC9C,IAAI,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,oBAAW,CAAC,IAAI,EAAE,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAEhF,OAAO,IAAI,KAAK,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;IACxC,CAAC;CACJ;AAjBD,sBAiBC","sourcesContent":[null]}},"error":null,"hash":"f20d60f204417fecca7ec28d3f3f3156","cacheData":{"env":{}}}