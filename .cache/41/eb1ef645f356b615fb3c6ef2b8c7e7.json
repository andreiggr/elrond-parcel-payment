{"id":"node_modules/@elrondnetwork/erdjs/out/smartcontracts/defaultRunner.js","dependencies":[{"name":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/smartcontracts/defaultRunner.js.map","includedInParent":true,"mtime":1647170304951},{"name":"/Users/mac/code/work/bitmarket/elrond-parcel/package.json","includedInParent":true,"mtime":1647174146392},{"name":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/package.json","includedInParent":true,"mtime":1647170304850}],"generated":{"js":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultInteractionRunner = void 0;\n/**\n * An interaction runner suitable for backends or wallets.\n * Not suitable for dapps, which depend on external signers (wallets, ledger etc.).\n */\nclass DefaultInteractionRunner {\n    constructor(checker, signer, provider) {\n        this.checker = checker;\n        this.signer = signer;\n        this.provider = provider;\n    }\n    /**\n     * Given an interaction, broadcasts its compiled transaction.\n     */\n    run(interaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.checkInteraction(interaction);\n            let transaction = interaction.buildTransaction();\n            yield this.signer.sign(transaction);\n            yield transaction.send(this.provider);\n            return transaction;\n        });\n    }\n    /**\n     * Given an interaction, broadcasts its compiled transaction (and also waits for its execution on the Network).\n     */\n    runAwaitExecution(interaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.checkInteraction(interaction);\n            let transaction = yield this.run(interaction);\n            yield transaction.awaitExecuted(this.provider);\n            // This will wait until the transaction is notarized, as well (so that SCRs are returned by the API).\n            let transactionOnNetwork = yield transaction.getAsOnNetwork(this.provider);\n            let bundle = interaction.interpretExecutionResults(transactionOnNetwork);\n            return bundle;\n        });\n    }\n    runQuery(interaction, caller) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.checkInteraction(interaction);\n            let query = interaction.buildQuery();\n            query.caller = caller || this.signer.getAddress();\n            let response = yield this.provider.queryContract(query);\n            let bundle = interaction.interpretQueryResponse(response);\n            return bundle;\n        });\n    }\n    runSimulation(interaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.checkInteraction(interaction);\n            let transaction = interaction.buildTransaction();\n            yield this.signer.sign(transaction);\n            return yield transaction.simulate(this.provider);\n        });\n    }\n    checkInteraction(interaction) {\n        this.checker.checkInteraction(interaction);\n    }\n}\nexports.DefaultInteractionRunner = DefaultInteractionRunner;\n"},"sourceMaps":{"js":{"version":3,"file":"defaultRunner.js","sourceRoot":"","sources":["../../src/smartcontracts/defaultRunner.ts"],"names":[],"mappings":";;;;;;;;;;;;AAMA;;;GAGG;AACH,MAAa,wBAAwB;IAKjC,YAAY,OAA4B,EAAE,MAAe,EAAE,QAAmB;QAC1E,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC7B,CAAC;IAED;;OAEG;IACG,GAAG,CAAC,WAAwB;;YAC9B,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;YAEnC,IAAI,WAAW,GAAG,WAAW,CAAC,gBAAgB,EAAE,CAAC;YACjD,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACpC,MAAM,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACtC,OAAO,WAAW,CAAC;QACvB,CAAC;KAAA;IAED;;OAEG;IACG,iBAAiB,CAAC,WAAwB;;YAC5C,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;YAEnC,IAAI,WAAW,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;YAC9C,MAAM,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC/C,qGAAqG;YACrG,IAAI,oBAAoB,GAAG,MAAM,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC3E,IAAI,MAAM,GAAG,WAAW,CAAC,yBAAyB,CAAC,oBAAoB,CAAC,CAAC;YACzE,OAAO,MAAM,CAAC;QAClB,CAAC;KAAA;IAEK,QAAQ,CAAC,WAAwB,EAAE,MAAgB;;YACrD,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;YAEnC,IAAI,KAAK,GAAG,WAAW,CAAC,UAAU,EAAE,CAAC;YACrC,KAAK,CAAC,MAAM,GAAG,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC;YAClD,IAAI,QAAQ,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YACxD,IAAI,MAAM,GAAG,WAAW,CAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC;YAC1D,OAAO,MAAM,CAAC;QAClB,CAAC;KAAA;IAEK,aAAa,CAAC,WAAwB;;YACxC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;YAEnC,IAAI,WAAW,GAAG,WAAW,CAAC,gBAAgB,EAAE,CAAC;YACjD,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACpC,OAAO,MAAM,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACrD,CAAC;KAAA;IAEO,gBAAgB,CAAC,WAAwB;QAC7C,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;IAC/C,CAAC;CACJ;AA1DD,4DA0DC","sourcesContent":[null]}},"error":null,"hash":"458d1322f7ac5223b20a71fd4a967f11","cacheData":{"env":{}}}