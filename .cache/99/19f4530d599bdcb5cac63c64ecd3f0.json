{"id":"node_modules/@elrondnetwork/erdjs/out/errors.js","dependencies":[{"name":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/out/errors.js.map","includedInParent":true,"mtime":1647170304981},{"name":"/Users/mac/code/work/bitmarket/elrond-parcel/package.json","includedInParent":true,"mtime":1647174146392},{"name":"/Users/mac/code/work/bitmarket/elrond-parcel/node_modules/@elrondnetwork/erdjs/package.json","includedInParent":true,"mtime":1647170304850}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ErrInvalidTxSignReturnValue = exports.ErrNotImplemented = exports.ErrInvalidEsdtTransferDataField = exports.ErrInvalidScCallDataField = exports.ErrBadPEM = exports.ErrContractInteraction = exports.ErrWrongMnemonic = exports.ErrWallet = exports.ErrCodec = exports.ErrStructTyping = exports.ErrTypingSystem = exports.ErrSerialization = exports.ErrTest = exports.ErrMock = exports.ErrContractQuery = exports.ErrContract = exports.ErrExpectedTransactionStatusNotReached = exports.ErrTransactionWatcherTimeout = exports.ErrAsyncTimerAborted = exports.ErrAsyncTimerAlreadyRunning = exports.ErrApiProviderPost = exports.ErrApiProviderGet = exports.ErrInvalidFunctionName = exports.ErrSignatureEmpty = exports.ErrSignatureCannotCreate = exports.ErrTransactionNotSigned = exports.ErrTransactionHashUnknown = exports.ErrGasPriceModifierInvalid = exports.ErrTransactionOptionsInvalid = exports.ErrTransactionVersionInvalid = exports.ErrChainIDInvalid = exports.ErrNonceInvalid = exports.ErrNotEnoughGas = exports.ErrGasLimitInvalid = exports.ErrGasPriceInvalid = exports.ErrBalanceInvalid = exports.ErrSignerCannotSign = exports.ErrAddressEmpty = exports.ErrAddressBadHrp = exports.ErrAddressCannotCreate = exports.ErrInvariantFailed = exports.ErrBadType = exports.ErrUnsupportedOperation = exports.ErrInvalidArgument = exports.Err = void 0;\nclass Err extends Error {\n    constructor(message, inner) {\n        super(message);\n        this.inner = undefined;\n        this.inner = inner;\n    }\n    /**\n     * Returns a pretty, friendly summary for the error or for the chain of errros (if appropriate).\n     */\n    summary() {\n        let result = [];\n        result.push({ name: this.name, message: this.message });\n        let inner = this.inner;\n        while (inner) {\n            result.push({ name: inner.name, message: inner.message });\n            inner = inner.inner;\n        }\n        return result;\n    }\n    /**\n     * Returns a HTML-friendly summary for the error or for the chain of errros (if appropriate).\n     */\n    html() {\n        let summary = this.summary();\n        let error = summary[0];\n        let causedBy = summary.slice(1);\n        let html = `\n            An error of type <strong>${error.name}</strong> occurred: ${error.message}.\n        `;\n        causedBy.forEach((cause) => {\n            html += `<br /> ... <strong>${cause.name}</strong>: ${cause.message}`;\n        });\n        return html;\n    }\n    /**\n     * Returns a HTML-friendly summary for the error or for the chain of errros (if appropriate).\n     */\n    static html(error) {\n        if (error instanceof Err) {\n            return error.html();\n        }\n        else {\n            return `Unexpected error of type <strong>${error.name}</strong> occurred: ${error.message}.`;\n        }\n    }\n}\nexports.Err = Err;\n/**\n * Signals invalid arguments for a function, for an operation.\n */\nclass ErrInvalidArgument extends Err {\n    constructor(name, value, reason = \"not specified\", inner) {\n        super(ErrInvalidArgument.getMessage(name, value, reason), inner);\n    }\n    static getMessage(name, value, reason) {\n        if (value) {\n            return `Invalid argument \"${name}\": ${value}. Reason: ${reason}`;\n        }\n        return `Invalid argument \"${name}\"`;\n    }\n}\nexports.ErrInvalidArgument = ErrInvalidArgument;\n/**\n * Signals an unsupported operation.\n */\nclass ErrUnsupportedOperation extends Err {\n    constructor(operation, reason = \"not specified\") {\n        super(`Operation \"${operation}\" not supported. Reason: ${reason}`);\n    }\n}\nexports.ErrUnsupportedOperation = ErrUnsupportedOperation;\n/**\n * Signals the provisioning of objects of unexpected (bad) types.\n */\nclass ErrBadType extends Err {\n    constructor(name, type, value) {\n        super(`Bad type of \"${name}\": ${value}. Expected type: ${type}`);\n    }\n}\nexports.ErrBadType = ErrBadType;\n/**\n * Signals that an invariant failed.\n */\nclass ErrInvariantFailed extends Err {\n    constructor(message) {\n        super(`\"Invariant failed: ${message}`);\n    }\n}\nexports.ErrInvariantFailed = ErrInvariantFailed;\n/**\n * Signals issues with {@link Address} instantiation.\n */\nclass ErrAddressCannotCreate extends Err {\n    constructor(input, inner) {\n        let message = `Cannot create address from: ${input}`;\n        super(message, inner);\n    }\n}\nexports.ErrAddressCannotCreate = ErrAddressCannotCreate;\n/**\n * Signals issues with the HRP of an {@link Address}.\n */\nclass ErrAddressBadHrp extends Err {\n    constructor(expected, got) {\n        super(`Wrong address HRP. Expected: ${expected}, got ${got}`);\n    }\n}\nexports.ErrAddressBadHrp = ErrAddressBadHrp;\n/**\n * Signals the presence of an empty / invalid address.\n */\nclass ErrAddressEmpty extends Err {\n    constructor() {\n        super(`Address is empty`);\n    }\n}\nexports.ErrAddressEmpty = ErrAddressEmpty;\n/**\n * Signals an error related to signing a message (a transaction).\n */\nclass ErrSignerCannotSign extends Err {\n    constructor(inner) {\n        super(`Cannot sign`, inner);\n    }\n}\nexports.ErrSignerCannotSign = ErrSignerCannotSign;\n/**\n * Signals an invalid value for {@link Balance} objects.\n */\nclass ErrBalanceInvalid extends Err {\n    constructor(value) {\n        super(`Invalid balance: ${value.toString()}`);\n    }\n}\nexports.ErrBalanceInvalid = ErrBalanceInvalid;\n/**\n * Signals an invalid value for {@link GasPrice} objects.\n */\nclass ErrGasPriceInvalid extends Err {\n    constructor(value) {\n        super(`Invalid gas price: ${value}`);\n    }\n}\nexports.ErrGasPriceInvalid = ErrGasPriceInvalid;\n/**\n * Signals an invalid value for {@link GasLimit} objects.\n */\nclass ErrGasLimitInvalid extends Err {\n    constructor(value) {\n        super(`Invalid gas limit: ${value}`);\n    }\n}\nexports.ErrGasLimitInvalid = ErrGasLimitInvalid;\n/**\n * Signals an invalid value for {@link GasLimit} objects.\n */\nclass ErrNotEnoughGas extends Err {\n    constructor(value) {\n        super(`Not enough gas provided: ${value}`);\n    }\n}\nexports.ErrNotEnoughGas = ErrNotEnoughGas;\n/**\n * Signals an invalid value for {@link Nonce} objects.\n */\nclass ErrNonceInvalid extends Err {\n    constructor(value) {\n        super(`Invalid nonce: ${value}`);\n    }\n}\nexports.ErrNonceInvalid = ErrNonceInvalid;\n/**\n * Signals an invalid value for {@link ChainID} objects.\n */\nclass ErrChainIDInvalid extends Err {\n    constructor(value) {\n        super(`Invalid chain ID: ${value}`);\n    }\n}\nexports.ErrChainIDInvalid = ErrChainIDInvalid;\n/**\n * Signals an invalid value for {@link TransactionVersion} objects.\n */\nclass ErrTransactionVersionInvalid extends Err {\n    constructor(value) {\n        super(`Invalid transaction version: ${value}`);\n    }\n}\nexports.ErrTransactionVersionInvalid = ErrTransactionVersionInvalid;\n/**\n * Signals an invalid value for {@link TransactionOptions} objects.\n */\nclass ErrTransactionOptionsInvalid extends Err {\n    constructor(value) {\n        super(`Invalid transaction options: ${value}`);\n    }\n}\nexports.ErrTransactionOptionsInvalid = ErrTransactionOptionsInvalid;\n/**\n * Signals an invalid value for {@link GasPriceModifier} objects.\n */\nclass ErrGasPriceModifierInvalid extends Err {\n    constructor(value) {\n        super(`Invalid gas price modifier: ${value}`);\n    }\n}\nexports.ErrGasPriceModifierInvalid = ErrGasPriceModifierInvalid;\n/**\n * Signals that the hash of the {@link Transaction} is not known (not set).\n */\nclass ErrTransactionHashUnknown extends Err {\n    constructor() {\n        super(`Transaction hash isn't known`);\n    }\n}\nexports.ErrTransactionHashUnknown = ErrTransactionHashUnknown;\n/**\n * Signals that a {@link Transaction} cannot be used within an operation, since it isn't signed.\n */\nclass ErrTransactionNotSigned extends Err {\n    constructor() {\n        super(`Transaction isn't signed`);\n    }\n}\nexports.ErrTransactionNotSigned = ErrTransactionNotSigned;\n/**\n * Signals an error related to signing a message (a transaction).\n */\nclass ErrSignatureCannotCreate extends Err {\n    constructor(input, inner) {\n        let message = `Cannot create signature from: ${input}`;\n        super(message, inner);\n    }\n}\nexports.ErrSignatureCannotCreate = ErrSignatureCannotCreate;\n/**\n * Signals the usage of an empty signature.\n */\nclass ErrSignatureEmpty extends Err {\n    constructor() {\n        super(`Signature is empty`);\n    }\n}\nexports.ErrSignatureEmpty = ErrSignatureEmpty;\n/**\n * Signals an invalid value for the name of a {@link ContractFunction}.\n */\nclass ErrInvalidFunctionName extends Err {\n    constructor() {\n        super(`Invalid function name`);\n    }\n}\nexports.ErrInvalidFunctionName = ErrInvalidFunctionName;\n/**\n * Signals an error that happened during a HTTP GET request.\n */\nclass ErrApiProviderGet extends Err {\n    constructor(url, error, inner) {\n        let message = `Cannot GET ${url}: [${error}]`;\n        super(message, inner);\n    }\n}\nexports.ErrApiProviderGet = ErrApiProviderGet;\n/**\n * Signals an error that happened during a HTTP POST request.\n */\nclass ErrApiProviderPost extends Err {\n    constructor(url, error, inner) {\n        let message = `Cannot POST ${url}: [${error}]`;\n        super(message, inner);\n        this.originalErrorMessage = error || \"\";\n    }\n}\nexports.ErrApiProviderPost = ErrApiProviderPost;\n/**\n * Signals a failed operation, since the Timer is already running.\n */\nclass ErrAsyncTimerAlreadyRunning extends Err {\n    constructor() {\n        super(\"Async timer already running\");\n    }\n}\nexports.ErrAsyncTimerAlreadyRunning = ErrAsyncTimerAlreadyRunning;\n/**\n * Signals a failed operation, since the Timer has been aborted.\n */\nclass ErrAsyncTimerAborted extends Err {\n    constructor() {\n        super(\"Async timer aborted\");\n    }\n}\nexports.ErrAsyncTimerAborted = ErrAsyncTimerAborted;\n/**\n * Signals a timout for a {@link TransactionWatcher}.\n */\nclass ErrTransactionWatcherTimeout extends Err {\n    constructor() {\n        super(`TransactionWatcher has timed out`);\n    }\n}\nexports.ErrTransactionWatcherTimeout = ErrTransactionWatcherTimeout;\n/**\n * Signals an issue related to waiting for a specific {@link TransactionStatus}.\n */\nclass ErrExpectedTransactionStatusNotReached extends Err {\n    constructor() {\n        super(`Expected transaction status not reached`);\n    }\n}\nexports.ErrExpectedTransactionStatusNotReached = ErrExpectedTransactionStatusNotReached;\n/**\n * Signals a generic error in the context of Smart Contracts.\n */\nclass ErrContract extends Err {\n    constructor(message) {\n        super(message);\n    }\n}\nexports.ErrContract = ErrContract;\n/**\n * Signals a generic error in the context of querying Smart Contracts.\n */\nclass ErrContractQuery extends Err {\n    constructor(message) {\n        super(message);\n    }\n    static increaseSpecificity(err) {\n        if (err instanceof ErrApiProviderPost) {\n            if (err.originalErrorMessage.indexOf(\"error running vm func\")) {\n                let newErrorMessage = err.originalErrorMessage\n                    .replace(new RegExp(\"executeQuery:\", \"g\"), \"\")\n                    .trim();\n                return new ErrContractQuery(newErrorMessage);\n            }\n        }\n        return err;\n    }\n}\nexports.ErrContractQuery = ErrContractQuery;\n/**\n * Signals an error thrown by the mock-like test objects.\n */\nclass ErrMock extends Err {\n    constructor(message) {\n        super(message);\n    }\n}\nexports.ErrMock = ErrMock;\n/**\n * Signals an error thrown when setting up a test.\n */\nclass ErrTest extends Err {\n    constructor(message) {\n        super(message);\n    }\n}\nexports.ErrTest = ErrTest;\n/**\n * Signals a generic serialization error.\n */\nclass ErrSerialization extends Err {\n    constructor(message) {\n        super(message);\n    }\n}\nexports.ErrSerialization = ErrSerialization;\n/**\n * Signals a generic type error.\n */\nclass ErrTypingSystem extends Err {\n    constructor(message) {\n        super(message);\n    }\n}\nexports.ErrTypingSystem = ErrTypingSystem;\n/**\n * Signals a generic struct typing error.\n */\nclass ErrStructTyping extends Err {\n    constructor(reason) {\n        super(`Incorrect struct typing: ${reason}`);\n    }\n}\nexports.ErrStructTyping = ErrStructTyping;\n/**\n * Signals a generic codec (encode / decode) error.\n */\nclass ErrCodec extends Err {\n    constructor(message) {\n        super(message);\n    }\n}\nexports.ErrCodec = ErrCodec;\n/**\n * Signals a generic wallet error.\n */\nclass ErrWallet extends Err {\n    constructor(message) {\n        super(message);\n    }\n}\nexports.ErrWallet = ErrWallet;\n/**\n * Signals a wrong mnemonic format.\n */\nclass ErrWrongMnemonic extends ErrWallet {\n    constructor() {\n        super(\"Wrong mnemonic format\");\n    }\n}\nexports.ErrWrongMnemonic = ErrWrongMnemonic;\n/**\n * Signals a generic contract interaction error.\n */\nclass ErrContractInteraction extends Err {\n    constructor(message) {\n        super(message);\n    }\n}\nexports.ErrContractInteraction = ErrContractInteraction;\n/**\n * Signals a bad PEM file.\n */\nclass ErrBadPEM extends ErrWallet {\n    constructor(message) {\n        super(message ? `Bad PEM: ${message}` : `Bad PEM`);\n    }\n}\nexports.ErrBadPEM = ErrBadPEM;\n/**\n * Signals an invalid smart contract call data field\n */\nclass ErrInvalidScCallDataField extends Err {\n    constructor(message) {\n        message = \" \" + message ? message : \".\";\n        super(\"Invalid smart contract call data field\" + message);\n    }\n}\nexports.ErrInvalidScCallDataField = ErrInvalidScCallDataField;\n/**\n * Signals an invalid ESDT transfer data field\n */\nclass ErrInvalidEsdtTransferDataField extends Err {\n    constructor() {\n        super(\"Invalid ESDT transfer call data field\");\n    }\n}\nexports.ErrInvalidEsdtTransferDataField = ErrInvalidEsdtTransferDataField;\n/**\n * Signals that a method is not yet implemented\n */\nclass ErrNotImplemented extends Err {\n    constructor() {\n        super(\"Method not yet implemented\");\n    }\n}\nexports.ErrNotImplemented = ErrNotImplemented;\n/**\n * Signals that the data inside the url is not a valid one for a transaction sign response\n */\nclass ErrInvalidTxSignReturnValue extends Err {\n    constructor() {\n        super(\"Invalid response in transaction sign return url\");\n    }\n}\nexports.ErrInvalidTxSignReturnValue = ErrInvalidTxSignReturnValue;\n"},"sourceMaps":{"js":{"version":3,"file":"errors.js","sourceRoot":"","sources":["../src/errors.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"error":null,"hash":"dfb6a95e585d726b178f3203fa45d547","cacheData":{"env":{}}}